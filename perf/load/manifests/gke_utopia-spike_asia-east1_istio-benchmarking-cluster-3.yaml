apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    istio-injection: enabled
  name: service-graph
spec: {}
status: {}
---
apiVersion: v1
data:
  service-graph: |
    defaults: {}
    global:
      control_plane_clusters:
      - gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      - gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      ingress_gateway_endpoint: 35.186.204.88
    services:
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      isEntrypoint: true
      name: s0
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s1
            size: 9.766KiB
        - call:
            service: s2
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s1
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s3
            size: 9.766KiB
        - call:
            service: s4
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s2
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s5
            size: 9.766KiB
        - call:
            service: s6
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s3
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s7
            size: 9.766KiB
        - call:
            service: s8
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s4
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s9
            size: 9.766KiB
        - call:
            service: s10
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s5
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s11
            size: 9.766KiB
        - call:
            service: s12
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s6
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s13
            size: 9.766KiB
        - call:
            service: s14
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s7
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s15
            size: 9.766KiB
        - call:
            service: s16
            size: 9.766KiB
        - call:
            service: s17
            size: 9.766KiB
        - call:
            service: s18
            size: 9.766KiB
        - call:
            service: s19
            size: 9.766KiB
        - call:
            service: s20
            size: 9.766KiB
        - call:
            service: s21
            size: 9.766KiB
        - call:
            service: s22
            size: 9.766KiB
        - call:
            service: s23
            size: 9.766KiB
        - call:
            service: s24
            size: 9.766KiB
        - call:
            service: s25
            size: 9.766KiB
        - call:
            service: s26
            size: 9.766KiB
        - call:
            service: s27
            size: 9.766KiB
        - call:
            service: s28
            size: 9.766KiB
        - call:
            service: s29
            size: 9.766KiB
        - call:
            service: s30
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s8
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s15
            size: 9.766KiB
        - call:
            service: s16
            size: 9.766KiB
        - call:
            service: s17
            size: 9.766KiB
        - call:
            service: s18
            size: 9.766KiB
        - call:
            service: s19
            size: 9.766KiB
        - call:
            service: s20
            size: 9.766KiB
        - call:
            service: s21
            size: 9.766KiB
        - call:
            service: s22
            size: 9.766KiB
        - call:
            service: s23
            size: 9.766KiB
        - call:
            service: s24
            size: 9.766KiB
        - call:
            service: s25
            size: 9.766KiB
        - call:
            service: s26
            size: 9.766KiB
        - call:
            service: s27
            size: 9.766KiB
        - call:
            service: s28
            size: 9.766KiB
        - call:
            service: s29
            size: 9.766KiB
        - call:
            service: s30
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s9
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s15
            size: 9.766KiB
        - call:
            service: s16
            size: 9.766KiB
        - call:
            service: s17
            size: 9.766KiB
        - call:
            service: s18
            size: 9.766KiB
        - call:
            service: s19
            size: 9.766KiB
        - call:
            service: s20
            size: 9.766KiB
        - call:
            service: s21
            size: 9.766KiB
        - call:
            service: s22
            size: 9.766KiB
        - call:
            service: s23
            size: 9.766KiB
        - call:
            service: s24
            size: 9.766KiB
        - call:
            service: s25
            size: 9.766KiB
        - call:
            service: s26
            size: 9.766KiB
        - call:
            service: s27
            size: 9.766KiB
        - call:
            service: s28
            size: 9.766KiB
        - call:
            service: s29
            size: 9.766KiB
        - call:
            service: s30
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s10
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s15
            size: 9.766KiB
        - call:
            service: s16
            size: 9.766KiB
        - call:
            service: s17
            size: 9.766KiB
        - call:
            service: s18
            size: 9.766KiB
        - call:
            service: s19
            size: 9.766KiB
        - call:
            service: s20
            size: 9.766KiB
        - call:
            service: s21
            size: 9.766KiB
        - call:
            service: s22
            size: 9.766KiB
        - call:
            service: s23
            size: 9.766KiB
        - call:
            service: s24
            size: 9.766KiB
        - call:
            service: s25
            size: 9.766KiB
        - call:
            service: s26
            size: 9.766KiB
        - call:
            service: s27
            size: 9.766KiB
        - call:
            service: s28
            size: 9.766KiB
        - call:
            service: s29
            size: 9.766KiB
        - call:
            service: s30
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s11
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s15
            size: 9.766KiB
        - call:
            service: s16
            size: 9.766KiB
        - call:
            service: s17
            size: 9.766KiB
        - call:
            service: s18
            size: 9.766KiB
        - call:
            service: s19
            size: 9.766KiB
        - call:
            service: s20
            size: 9.766KiB
        - call:
            service: s21
            size: 9.766KiB
        - call:
            service: s22
            size: 9.766KiB
        - call:
            service: s23
            size: 9.766KiB
        - call:
            service: s24
            size: 9.766KiB
        - call:
            service: s25
            size: 9.766KiB
        - call:
            service: s26
            size: 9.766KiB
        - call:
            service: s27
            size: 9.766KiB
        - call:
            service: s28
            size: 9.766KiB
        - call:
            service: s29
            size: 9.766KiB
        - call:
            service: s30
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s12
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s15
            size: 9.766KiB
        - call:
            service: s16
            size: 9.766KiB
        - call:
            service: s17
            size: 9.766KiB
        - call:
            service: s18
            size: 9.766KiB
        - call:
            service: s19
            size: 9.766KiB
        - call:
            service: s20
            size: 9.766KiB
        - call:
            service: s21
            size: 9.766KiB
        - call:
            service: s22
            size: 9.766KiB
        - call:
            service: s23
            size: 9.766KiB
        - call:
            service: s24
            size: 9.766KiB
        - call:
            service: s25
            size: 9.766KiB
        - call:
            service: s26
            size: 9.766KiB
        - call:
            service: s27
            size: 9.766KiB
        - call:
            service: s28
            size: 9.766KiB
        - call:
            service: s29
            size: 9.766KiB
        - call:
            service: s30
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s13
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s15
            size: 9.766KiB
        - call:
            service: s16
            size: 9.766KiB
        - call:
            service: s17
            size: 9.766KiB
        - call:
            service: s18
            size: 9.766KiB
        - call:
            service: s19
            size: 9.766KiB
        - call:
            service: s20
            size: 9.766KiB
        - call:
            service: s21
            size: 9.766KiB
        - call:
            service: s22
            size: 9.766KiB
        - call:
            service: s23
            size: 9.766KiB
        - call:
            service: s24
            size: 9.766KiB
        - call:
            service: s25
            size: 9.766KiB
        - call:
            service: s26
            size: 9.766KiB
        - call:
            service: s27
            size: 9.766KiB
        - call:
            service: s28
            size: 9.766KiB
        - call:
            service: s29
            size: 9.766KiB
        - call:
            service: s30
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s14
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s15
            size: 9.766KiB
        - call:
            service: s16
            size: 9.766KiB
        - call:
            service: s17
            size: 9.766KiB
        - call:
            service: s18
            size: 9.766KiB
        - call:
            service: s19
            size: 9.766KiB
        - call:
            service: s20
            size: 9.766KiB
        - call:
            service: s21
            size: 9.766KiB
        - call:
            service: s22
            size: 9.766KiB
        - call:
            service: s23
            size: 9.766KiB
        - call:
            service: s24
            size: 9.766KiB
        - call:
            service: s25
            size: 9.766KiB
        - call:
            service: s26
            size: 9.766KiB
        - call:
            service: s27
            size: 9.766KiB
        - call:
            service: s28
            size: 9.766KiB
        - call:
            service: s29
            size: 9.766KiB
        - call:
            service: s30
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s15
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s16
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s17
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s18
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s19
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s20
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s21
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s22
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s23
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s24
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s25
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s26
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s27
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s28
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s29
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s30
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      isEntrypoint: true
      name: s31
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s32
            size: 9.766KiB
        - call:
            service: s33
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s32
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s34
            size: 9.766KiB
        - call:
            service: s35
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s33
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s36
            size: 9.766KiB
        - call:
            service: s37
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s34
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s38
            size: 9.766KiB
        - call:
            service: s39
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s35
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s40
            size: 9.766KiB
        - call:
            service: s41
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s36
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s42
            size: 9.766KiB
        - call:
            service: s43
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s37
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s44
            size: 9.766KiB
        - call:
            service: s45
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s38
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s46
            size: 9.766KiB
        - call:
            service: s47
            size: 9.766KiB
        - call:
            service: s48
            size: 9.766KiB
        - call:
            service: s49
            size: 9.766KiB
        - call:
            service: s50
            size: 9.766KiB
        - call:
            service: s51
            size: 9.766KiB
        - call:
            service: s52
            size: 9.766KiB
        - call:
            service: s53
            size: 9.766KiB
        - call:
            service: s54
            size: 9.766KiB
        - call:
            service: s55
            size: 9.766KiB
        - call:
            service: s56
            size: 9.766KiB
        - call:
            service: s57
            size: 9.766KiB
        - call:
            service: s58
            size: 9.766KiB
        - call:
            service: s59
            size: 9.766KiB
        - call:
            service: s60
            size: 9.766KiB
        - call:
            service: s61
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s39
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s46
            size: 9.766KiB
        - call:
            service: s47
            size: 9.766KiB
        - call:
            service: s48
            size: 9.766KiB
        - call:
            service: s49
            size: 9.766KiB
        - call:
            service: s50
            size: 9.766KiB
        - call:
            service: s51
            size: 9.766KiB
        - call:
            service: s52
            size: 9.766KiB
        - call:
            service: s53
            size: 9.766KiB
        - call:
            service: s54
            size: 9.766KiB
        - call:
            service: s55
            size: 9.766KiB
        - call:
            service: s56
            size: 9.766KiB
        - call:
            service: s57
            size: 9.766KiB
        - call:
            service: s58
            size: 9.766KiB
        - call:
            service: s59
            size: 9.766KiB
        - call:
            service: s60
            size: 9.766KiB
        - call:
            service: s61
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s40
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s46
            size: 9.766KiB
        - call:
            service: s47
            size: 9.766KiB
        - call:
            service: s48
            size: 9.766KiB
        - call:
            service: s49
            size: 9.766KiB
        - call:
            service: s50
            size: 9.766KiB
        - call:
            service: s51
            size: 9.766KiB
        - call:
            service: s52
            size: 9.766KiB
        - call:
            service: s53
            size: 9.766KiB
        - call:
            service: s54
            size: 9.766KiB
        - call:
            service: s55
            size: 9.766KiB
        - call:
            service: s56
            size: 9.766KiB
        - call:
            service: s57
            size: 9.766KiB
        - call:
            service: s58
            size: 9.766KiB
        - call:
            service: s59
            size: 9.766KiB
        - call:
            service: s60
            size: 9.766KiB
        - call:
            service: s61
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s41
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s46
            size: 9.766KiB
        - call:
            service: s47
            size: 9.766KiB
        - call:
            service: s48
            size: 9.766KiB
        - call:
            service: s49
            size: 9.766KiB
        - call:
            service: s50
            size: 9.766KiB
        - call:
            service: s51
            size: 9.766KiB
        - call:
            service: s52
            size: 9.766KiB
        - call:
            service: s53
            size: 9.766KiB
        - call:
            service: s54
            size: 9.766KiB
        - call:
            service: s55
            size: 9.766KiB
        - call:
            service: s56
            size: 9.766KiB
        - call:
            service: s57
            size: 9.766KiB
        - call:
            service: s58
            size: 9.766KiB
        - call:
            service: s59
            size: 9.766KiB
        - call:
            service: s60
            size: 9.766KiB
        - call:
            service: s61
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s42
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s46
            size: 9.766KiB
        - call:
            service: s47
            size: 9.766KiB
        - call:
            service: s48
            size: 9.766KiB
        - call:
            service: s49
            size: 9.766KiB
        - call:
            service: s50
            size: 9.766KiB
        - call:
            service: s51
            size: 9.766KiB
        - call:
            service: s52
            size: 9.766KiB
        - call:
            service: s53
            size: 9.766KiB
        - call:
            service: s54
            size: 9.766KiB
        - call:
            service: s55
            size: 9.766KiB
        - call:
            service: s56
            size: 9.766KiB
        - call:
            service: s57
            size: 9.766KiB
        - call:
            service: s58
            size: 9.766KiB
        - call:
            service: s59
            size: 9.766KiB
        - call:
            service: s60
            size: 9.766KiB
        - call:
            service: s61
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s43
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s46
            size: 9.766KiB
        - call:
            service: s47
            size: 9.766KiB
        - call:
            service: s48
            size: 9.766KiB
        - call:
            service: s49
            size: 9.766KiB
        - call:
            service: s50
            size: 9.766KiB
        - call:
            service: s51
            size: 9.766KiB
        - call:
            service: s52
            size: 9.766KiB
        - call:
            service: s53
            size: 9.766KiB
        - call:
            service: s54
            size: 9.766KiB
        - call:
            service: s55
            size: 9.766KiB
        - call:
            service: s56
            size: 9.766KiB
        - call:
            service: s57
            size: 9.766KiB
        - call:
            service: s58
            size: 9.766KiB
        - call:
            service: s59
            size: 9.766KiB
        - call:
            service: s60
            size: 9.766KiB
        - call:
            service: s61
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s44
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s46
            size: 9.766KiB
        - call:
            service: s47
            size: 9.766KiB
        - call:
            service: s48
            size: 9.766KiB
        - call:
            service: s49
            size: 9.766KiB
        - call:
            service: s50
            size: 9.766KiB
        - call:
            service: s51
            size: 9.766KiB
        - call:
            service: s52
            size: 9.766KiB
        - call:
            service: s53
            size: 9.766KiB
        - call:
            service: s54
            size: 9.766KiB
        - call:
            service: s55
            size: 9.766KiB
        - call:
            service: s56
            size: 9.766KiB
        - call:
            service: s57
            size: 9.766KiB
        - call:
            service: s58
            size: 9.766KiB
        - call:
            service: s59
            size: 9.766KiB
        - call:
            service: s60
            size: 9.766KiB
        - call:
            service: s61
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s45
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s46
            size: 9.766KiB
        - call:
            service: s47
            size: 9.766KiB
        - call:
            service: s48
            size: 9.766KiB
        - call:
            service: s49
            size: 9.766KiB
        - call:
            service: s50
            size: 9.766KiB
        - call:
            service: s51
            size: 9.766KiB
        - call:
            service: s52
            size: 9.766KiB
        - call:
            service: s53
            size: 9.766KiB
        - call:
            service: s54
            size: 9.766KiB
        - call:
            service: s55
            size: 9.766KiB
        - call:
            service: s56
            size: 9.766KiB
        - call:
            service: s57
            size: 9.766KiB
        - call:
            service: s58
            size: 9.766KiB
        - call:
            service: s59
            size: 9.766KiB
        - call:
            service: s60
            size: 9.766KiB
        - call:
            service: s61
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s46
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s47
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s48
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s49
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s50
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s51
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s52
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s53
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s54
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s55
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s56
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s57
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s58
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s59
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s60
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s61
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s62
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s63
            size: 9.766KiB
        - call:
            service: s64
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s63
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s65
            size: 9.766KiB
        - call:
            service: s66
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s64
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s67
            size: 9.766KiB
        - call:
            service: s68
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s65
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s69
            size: 9.766KiB
        - call:
            service: s70
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s66
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s71
            size: 9.766KiB
        - call:
            service: s72
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s67
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s73
            size: 9.766KiB
        - call:
            service: s74
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s68
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s75
            size: 9.766KiB
        - call:
            service: s76
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s69
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s77
            size: 9.766KiB
        - call:
            service: s78
            size: 9.766KiB
        - call:
            service: s79
            size: 9.766KiB
        - call:
            service: s80
            size: 9.766KiB
        - call:
            service: s81
            size: 9.766KiB
        - call:
            service: s82
            size: 9.766KiB
        - call:
            service: s83
            size: 9.766KiB
        - call:
            service: s84
            size: 9.766KiB
        - call:
            service: s85
            size: 9.766KiB
        - call:
            service: s86
            size: 9.766KiB
        - call:
            service: s87
            size: 9.766KiB
        - call:
            service: s88
            size: 9.766KiB
        - call:
            service: s89
            size: 9.766KiB
        - call:
            service: s90
            size: 9.766KiB
        - call:
            service: s91
            size: 9.766KiB
        - call:
            service: s92
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s70
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s77
            size: 9.766KiB
        - call:
            service: s78
            size: 9.766KiB
        - call:
            service: s79
            size: 9.766KiB
        - call:
            service: s80
            size: 9.766KiB
        - call:
            service: s81
            size: 9.766KiB
        - call:
            service: s82
            size: 9.766KiB
        - call:
            service: s83
            size: 9.766KiB
        - call:
            service: s84
            size: 9.766KiB
        - call:
            service: s85
            size: 9.766KiB
        - call:
            service: s86
            size: 9.766KiB
        - call:
            service: s87
            size: 9.766KiB
        - call:
            service: s88
            size: 9.766KiB
        - call:
            service: s89
            size: 9.766KiB
        - call:
            service: s90
            size: 9.766KiB
        - call:
            service: s91
            size: 9.766KiB
        - call:
            service: s92
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s71
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s77
            size: 9.766KiB
        - call:
            service: s78
            size: 9.766KiB
        - call:
            service: s79
            size: 9.766KiB
        - call:
            service: s80
            size: 9.766KiB
        - call:
            service: s81
            size: 9.766KiB
        - call:
            service: s82
            size: 9.766KiB
        - call:
            service: s83
            size: 9.766KiB
        - call:
            service: s84
            size: 9.766KiB
        - call:
            service: s85
            size: 9.766KiB
        - call:
            service: s86
            size: 9.766KiB
        - call:
            service: s87
            size: 9.766KiB
        - call:
            service: s88
            size: 9.766KiB
        - call:
            service: s89
            size: 9.766KiB
        - call:
            service: s90
            size: 9.766KiB
        - call:
            service: s91
            size: 9.766KiB
        - call:
            service: s92
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s72
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s77
            size: 9.766KiB
        - call:
            service: s78
            size: 9.766KiB
        - call:
            service: s79
            size: 9.766KiB
        - call:
            service: s80
            size: 9.766KiB
        - call:
            service: s81
            size: 9.766KiB
        - call:
            service: s82
            size: 9.766KiB
        - call:
            service: s83
            size: 9.766KiB
        - call:
            service: s84
            size: 9.766KiB
        - call:
            service: s85
            size: 9.766KiB
        - call:
            service: s86
            size: 9.766KiB
        - call:
            service: s87
            size: 9.766KiB
        - call:
            service: s88
            size: 9.766KiB
        - call:
            service: s89
            size: 9.766KiB
        - call:
            service: s90
            size: 9.766KiB
        - call:
            service: s91
            size: 9.766KiB
        - call:
            service: s92
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s73
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s77
            size: 9.766KiB
        - call:
            service: s78
            size: 9.766KiB
        - call:
            service: s79
            size: 9.766KiB
        - call:
            service: s80
            size: 9.766KiB
        - call:
            service: s81
            size: 9.766KiB
        - call:
            service: s82
            size: 9.766KiB
        - call:
            service: s83
            size: 9.766KiB
        - call:
            service: s84
            size: 9.766KiB
        - call:
            service: s85
            size: 9.766KiB
        - call:
            service: s86
            size: 9.766KiB
        - call:
            service: s87
            size: 9.766KiB
        - call:
            service: s88
            size: 9.766KiB
        - call:
            service: s89
            size: 9.766KiB
        - call:
            service: s90
            size: 9.766KiB
        - call:
            service: s91
            size: 9.766KiB
        - call:
            service: s92
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s74
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s77
            size: 9.766KiB
        - call:
            service: s78
            size: 9.766KiB
        - call:
            service: s79
            size: 9.766KiB
        - call:
            service: s80
            size: 9.766KiB
        - call:
            service: s81
            size: 9.766KiB
        - call:
            service: s82
            size: 9.766KiB
        - call:
            service: s83
            size: 9.766KiB
        - call:
            service: s84
            size: 9.766KiB
        - call:
            service: s85
            size: 9.766KiB
        - call:
            service: s86
            size: 9.766KiB
        - call:
            service: s87
            size: 9.766KiB
        - call:
            service: s88
            size: 9.766KiB
        - call:
            service: s89
            size: 9.766KiB
        - call:
            service: s90
            size: 9.766KiB
        - call:
            service: s91
            size: 9.766KiB
        - call:
            service: s92
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s75
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s77
            size: 9.766KiB
        - call:
            service: s78
            size: 9.766KiB
        - call:
            service: s79
            size: 9.766KiB
        - call:
            service: s80
            size: 9.766KiB
        - call:
            service: s81
            size: 9.766KiB
        - call:
            service: s82
            size: 9.766KiB
        - call:
            service: s83
            size: 9.766KiB
        - call:
            service: s84
            size: 9.766KiB
        - call:
            service: s85
            size: 9.766KiB
        - call:
            service: s86
            size: 9.766KiB
        - call:
            service: s87
            size: 9.766KiB
        - call:
            service: s88
            size: 9.766KiB
        - call:
            service: s89
            size: 9.766KiB
        - call:
            service: s90
            size: 9.766KiB
        - call:
            service: s91
            size: 9.766KiB
        - call:
            service: s92
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s76
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s77
            size: 9.766KiB
        - call:
            service: s78
            size: 9.766KiB
        - call:
            service: s79
            size: 9.766KiB
        - call:
            service: s80
            size: 9.766KiB
        - call:
            service: s81
            size: 9.766KiB
        - call:
            service: s82
            size: 9.766KiB
        - call:
            service: s83
            size: 9.766KiB
        - call:
            service: s84
            size: 9.766KiB
        - call:
            service: s85
            size: 9.766KiB
        - call:
            service: s86
            size: 9.766KiB
        - call:
            service: s87
            size: 9.766KiB
        - call:
            service: s88
            size: 9.766KiB
        - call:
            service: s89
            size: 9.766KiB
        - call:
            service: s90
            size: 9.766KiB
        - call:
            service: s91
            size: 9.766KiB
        - call:
            service: s92
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s77
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s78
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s79
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s80
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s81
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s82
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s83
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s84
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s85
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s86
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s87
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s88
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s89
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s90
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s91
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s92
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s93
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s94
            size: 9.766KiB
        - call:
            service: s95
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s94
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s96
            size: 9.766KiB
        - call:
            service: s97
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s95
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s98
            size: 9.766KiB
        - call:
            service: s99
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s96
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s100
            size: 9.766KiB
        - call:
            service: s101
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s97
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s102
            size: 9.766KiB
        - call:
            service: s103
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s98
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s104
            size: 9.766KiB
        - call:
            service: s105
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s99
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s106
            size: 9.766KiB
        - call:
            service: s107
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s100
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s108
            size: 9.766KiB
        - call:
            service: s109
            size: 9.766KiB
        - call:
            service: s110
            size: 9.766KiB
        - call:
            service: s111
            size: 9.766KiB
        - call:
            service: s112
            size: 9.766KiB
        - call:
            service: s113
            size: 9.766KiB
        - call:
            service: s114
            size: 9.766KiB
        - call:
            service: s115
            size: 9.766KiB
        - call:
            service: s116
            size: 9.766KiB
        - call:
            service: s117
            size: 9.766KiB
        - call:
            service: s118
            size: 9.766KiB
        - call:
            service: s119
            size: 9.766KiB
        - call:
            service: s120
            size: 9.766KiB
        - call:
            service: s121
            size: 9.766KiB
        - call:
            service: s122
            size: 9.766KiB
        - call:
            service: s123
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s101
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s108
            size: 9.766KiB
        - call:
            service: s109
            size: 9.766KiB
        - call:
            service: s110
            size: 9.766KiB
        - call:
            service: s111
            size: 9.766KiB
        - call:
            service: s112
            size: 9.766KiB
        - call:
            service: s113
            size: 9.766KiB
        - call:
            service: s114
            size: 9.766KiB
        - call:
            service: s115
            size: 9.766KiB
        - call:
            service: s116
            size: 9.766KiB
        - call:
            service: s117
            size: 9.766KiB
        - call:
            service: s118
            size: 9.766KiB
        - call:
            service: s119
            size: 9.766KiB
        - call:
            service: s120
            size: 9.766KiB
        - call:
            service: s121
            size: 9.766KiB
        - call:
            service: s122
            size: 9.766KiB
        - call:
            service: s123
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s102
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s108
            size: 9.766KiB
        - call:
            service: s109
            size: 9.766KiB
        - call:
            service: s110
            size: 9.766KiB
        - call:
            service: s111
            size: 9.766KiB
        - call:
            service: s112
            size: 9.766KiB
        - call:
            service: s113
            size: 9.766KiB
        - call:
            service: s114
            size: 9.766KiB
        - call:
            service: s115
            size: 9.766KiB
        - call:
            service: s116
            size: 9.766KiB
        - call:
            service: s117
            size: 9.766KiB
        - call:
            service: s118
            size: 9.766KiB
        - call:
            service: s119
            size: 9.766KiB
        - call:
            service: s120
            size: 9.766KiB
        - call:
            service: s121
            size: 9.766KiB
        - call:
            service: s122
            size: 9.766KiB
        - call:
            service: s123
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s103
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s108
            size: 9.766KiB
        - call:
            service: s109
            size: 9.766KiB
        - call:
            service: s110
            size: 9.766KiB
        - call:
            service: s111
            size: 9.766KiB
        - call:
            service: s112
            size: 9.766KiB
        - call:
            service: s113
            size: 9.766KiB
        - call:
            service: s114
            size: 9.766KiB
        - call:
            service: s115
            size: 9.766KiB
        - call:
            service: s116
            size: 9.766KiB
        - call:
            service: s117
            size: 9.766KiB
        - call:
            service: s118
            size: 9.766KiB
        - call:
            service: s119
            size: 9.766KiB
        - call:
            service: s120
            size: 9.766KiB
        - call:
            service: s121
            size: 9.766KiB
        - call:
            service: s122
            size: 9.766KiB
        - call:
            service: s123
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s104
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s108
            size: 9.766KiB
        - call:
            service: s109
            size: 9.766KiB
        - call:
            service: s110
            size: 9.766KiB
        - call:
            service: s111
            size: 9.766KiB
        - call:
            service: s112
            size: 9.766KiB
        - call:
            service: s113
            size: 9.766KiB
        - call:
            service: s114
            size: 9.766KiB
        - call:
            service: s115
            size: 9.766KiB
        - call:
            service: s116
            size: 9.766KiB
        - call:
            service: s117
            size: 9.766KiB
        - call:
            service: s118
            size: 9.766KiB
        - call:
            service: s119
            size: 9.766KiB
        - call:
            service: s120
            size: 9.766KiB
        - call:
            service: s121
            size: 9.766KiB
        - call:
            service: s122
            size: 9.766KiB
        - call:
            service: s123
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s105
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s108
            size: 9.766KiB
        - call:
            service: s109
            size: 9.766KiB
        - call:
            service: s110
            size: 9.766KiB
        - call:
            service: s111
            size: 9.766KiB
        - call:
            service: s112
            size: 9.766KiB
        - call:
            service: s113
            size: 9.766KiB
        - call:
            service: s114
            size: 9.766KiB
        - call:
            service: s115
            size: 9.766KiB
        - call:
            service: s116
            size: 9.766KiB
        - call:
            service: s117
            size: 9.766KiB
        - call:
            service: s118
            size: 9.766KiB
        - call:
            service: s119
            size: 9.766KiB
        - call:
            service: s120
            size: 9.766KiB
        - call:
            service: s121
            size: 9.766KiB
        - call:
            service: s122
            size: 9.766KiB
        - call:
            service: s123
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s106
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s108
            size: 9.766KiB
        - call:
            service: s109
            size: 9.766KiB
        - call:
            service: s110
            size: 9.766KiB
        - call:
            service: s111
            size: 9.766KiB
        - call:
            service: s112
            size: 9.766KiB
        - call:
            service: s113
            size: 9.766KiB
        - call:
            service: s114
            size: 9.766KiB
        - call:
            service: s115
            size: 9.766KiB
        - call:
            service: s116
            size: 9.766KiB
        - call:
            service: s117
            size: 9.766KiB
        - call:
            service: s118
            size: 9.766KiB
        - call:
            service: s119
            size: 9.766KiB
        - call:
            service: s120
            size: 9.766KiB
        - call:
            service: s121
            size: 9.766KiB
        - call:
            service: s122
            size: 9.766KiB
        - call:
            service: s123
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s107
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s108
            size: 9.766KiB
        - call:
            service: s109
            size: 9.766KiB
        - call:
            service: s110
            size: 9.766KiB
        - call:
            service: s111
            size: 9.766KiB
        - call:
            service: s112
            size: 9.766KiB
        - call:
            service: s113
            size: 9.766KiB
        - call:
            service: s114
            size: 9.766KiB
        - call:
            service: s115
            size: 9.766KiB
        - call:
            service: s116
            size: 9.766KiB
        - call:
            service: s117
            size: 9.766KiB
        - call:
            service: s118
            size: 9.766KiB
        - call:
            service: s119
            size: 9.766KiB
        - call:
            service: s120
            size: 9.766KiB
        - call:
            service: s121
            size: 9.766KiB
        - call:
            service: s122
            size: 9.766KiB
        - call:
            service: s123
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s108
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s109
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s110
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s111
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s112
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s113
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s114
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s115
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s116
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s117
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s118
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s119
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s120
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s121
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s122
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s123
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      isEntrypoint: true
      name: s124
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s125
            size: 9.766KiB
        - call:
            service: s126
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s125
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s127
            size: 9.766KiB
        - call:
            service: s128
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s126
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s129
            size: 9.766KiB
        - call:
            service: s130
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s127
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s131
            size: 9.766KiB
        - call:
            service: s132
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s128
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s133
            size: 9.766KiB
        - call:
            service: s134
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s129
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s135
            size: 9.766KiB
        - call:
            service: s136
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s130
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s137
            size: 9.766KiB
        - call:
            service: s138
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s131
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s139
            size: 9.766KiB
        - call:
            service: s140
            size: 9.766KiB
        - call:
            service: s141
            size: 9.766KiB
        - call:
            service: s142
            size: 9.766KiB
        - call:
            service: s143
            size: 9.766KiB
        - call:
            service: s144
            size: 9.766KiB
        - call:
            service: s145
            size: 9.766KiB
        - call:
            service: s146
            size: 9.766KiB
        - call:
            service: s147
            size: 9.766KiB
        - call:
            service: s148
            size: 9.766KiB
        - call:
            service: s149
            size: 9.766KiB
        - call:
            service: s150
            size: 9.766KiB
        - call:
            service: s151
            size: 9.766KiB
        - call:
            service: s152
            size: 9.766KiB
        - call:
            service: s153
            size: 9.766KiB
        - call:
            service: s154
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s132
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s139
            size: 9.766KiB
        - call:
            service: s140
            size: 9.766KiB
        - call:
            service: s141
            size: 9.766KiB
        - call:
            service: s142
            size: 9.766KiB
        - call:
            service: s143
            size: 9.766KiB
        - call:
            service: s144
            size: 9.766KiB
        - call:
            service: s145
            size: 9.766KiB
        - call:
            service: s146
            size: 9.766KiB
        - call:
            service: s147
            size: 9.766KiB
        - call:
            service: s148
            size: 9.766KiB
        - call:
            service: s149
            size: 9.766KiB
        - call:
            service: s150
            size: 9.766KiB
        - call:
            service: s151
            size: 9.766KiB
        - call:
            service: s152
            size: 9.766KiB
        - call:
            service: s153
            size: 9.766KiB
        - call:
            service: s154
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s133
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s139
            size: 9.766KiB
        - call:
            service: s140
            size: 9.766KiB
        - call:
            service: s141
            size: 9.766KiB
        - call:
            service: s142
            size: 9.766KiB
        - call:
            service: s143
            size: 9.766KiB
        - call:
            service: s144
            size: 9.766KiB
        - call:
            service: s145
            size: 9.766KiB
        - call:
            service: s146
            size: 9.766KiB
        - call:
            service: s147
            size: 9.766KiB
        - call:
            service: s148
            size: 9.766KiB
        - call:
            service: s149
            size: 9.766KiB
        - call:
            service: s150
            size: 9.766KiB
        - call:
            service: s151
            size: 9.766KiB
        - call:
            service: s152
            size: 9.766KiB
        - call:
            service: s153
            size: 9.766KiB
        - call:
            service: s154
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s134
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s139
            size: 9.766KiB
        - call:
            service: s140
            size: 9.766KiB
        - call:
            service: s141
            size: 9.766KiB
        - call:
            service: s142
            size: 9.766KiB
        - call:
            service: s143
            size: 9.766KiB
        - call:
            service: s144
            size: 9.766KiB
        - call:
            service: s145
            size: 9.766KiB
        - call:
            service: s146
            size: 9.766KiB
        - call:
            service: s147
            size: 9.766KiB
        - call:
            service: s148
            size: 9.766KiB
        - call:
            service: s149
            size: 9.766KiB
        - call:
            service: s150
            size: 9.766KiB
        - call:
            service: s151
            size: 9.766KiB
        - call:
            service: s152
            size: 9.766KiB
        - call:
            service: s153
            size: 9.766KiB
        - call:
            service: s154
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s135
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s139
            size: 9.766KiB
        - call:
            service: s140
            size: 9.766KiB
        - call:
            service: s141
            size: 9.766KiB
        - call:
            service: s142
            size: 9.766KiB
        - call:
            service: s143
            size: 9.766KiB
        - call:
            service: s144
            size: 9.766KiB
        - call:
            service: s145
            size: 9.766KiB
        - call:
            service: s146
            size: 9.766KiB
        - call:
            service: s147
            size: 9.766KiB
        - call:
            service: s148
            size: 9.766KiB
        - call:
            service: s149
            size: 9.766KiB
        - call:
            service: s150
            size: 9.766KiB
        - call:
            service: s151
            size: 9.766KiB
        - call:
            service: s152
            size: 9.766KiB
        - call:
            service: s153
            size: 9.766KiB
        - call:
            service: s154
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s136
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s139
            size: 9.766KiB
        - call:
            service: s140
            size: 9.766KiB
        - call:
            service: s141
            size: 9.766KiB
        - call:
            service: s142
            size: 9.766KiB
        - call:
            service: s143
            size: 9.766KiB
        - call:
            service: s144
            size: 9.766KiB
        - call:
            service: s145
            size: 9.766KiB
        - call:
            service: s146
            size: 9.766KiB
        - call:
            service: s147
            size: 9.766KiB
        - call:
            service: s148
            size: 9.766KiB
        - call:
            service: s149
            size: 9.766KiB
        - call:
            service: s150
            size: 9.766KiB
        - call:
            service: s151
            size: 9.766KiB
        - call:
            service: s152
            size: 9.766KiB
        - call:
            service: s153
            size: 9.766KiB
        - call:
            service: s154
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s137
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s139
            size: 9.766KiB
        - call:
            service: s140
            size: 9.766KiB
        - call:
            service: s141
            size: 9.766KiB
        - call:
            service: s142
            size: 9.766KiB
        - call:
            service: s143
            size: 9.766KiB
        - call:
            service: s144
            size: 9.766KiB
        - call:
            service: s145
            size: 9.766KiB
        - call:
            service: s146
            size: 9.766KiB
        - call:
            service: s147
            size: 9.766KiB
        - call:
            service: s148
            size: 9.766KiB
        - call:
            service: s149
            size: 9.766KiB
        - call:
            service: s150
            size: 9.766KiB
        - call:
            service: s151
            size: 9.766KiB
        - call:
            service: s152
            size: 9.766KiB
        - call:
            service: s153
            size: 9.766KiB
        - call:
            service: s154
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s138
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s139
            size: 9.766KiB
        - call:
            service: s140
            size: 9.766KiB
        - call:
            service: s141
            size: 9.766KiB
        - call:
            service: s142
            size: 9.766KiB
        - call:
            service: s143
            size: 9.766KiB
        - call:
            service: s144
            size: 9.766KiB
        - call:
            service: s145
            size: 9.766KiB
        - call:
            service: s146
            size: 9.766KiB
        - call:
            service: s147
            size: 9.766KiB
        - call:
            service: s148
            size: 9.766KiB
        - call:
            service: s149
            size: 9.766KiB
        - call:
            service: s150
            size: 9.766KiB
        - call:
            service: s151
            size: 9.766KiB
        - call:
            service: s152
            size: 9.766KiB
        - call:
            service: s153
            size: 9.766KiB
        - call:
            service: s154
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s139
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s140
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s141
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s142
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s143
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s144
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s145
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s146
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s147
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s148
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s149
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s150
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s151
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s152
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s153
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s154
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s155
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s156
            size: 9.766KiB
        - call:
            service: s157
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s156
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s158
            size: 9.766KiB
        - call:
            service: s159
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s157
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s160
            size: 9.766KiB
        - call:
            service: s161
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s158
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s162
            size: 9.766KiB
        - call:
            service: s163
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s159
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s164
            size: 9.766KiB
        - call:
            service: s165
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s160
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s166
            size: 9.766KiB
        - call:
            service: s167
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s161
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s168
            size: 9.766KiB
        - call:
            service: s169
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s162
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s170
            size: 9.766KiB
        - call:
            service: s171
            size: 9.766KiB
        - call:
            service: s172
            size: 9.766KiB
        - call:
            service: s173
            size: 9.766KiB
        - call:
            service: s174
            size: 9.766KiB
        - call:
            service: s175
            size: 9.766KiB
        - call:
            service: s176
            size: 9.766KiB
        - call:
            service: s177
            size: 9.766KiB
        - call:
            service: s178
            size: 9.766KiB
        - call:
            service: s179
            size: 9.766KiB
        - call:
            service: s180
            size: 9.766KiB
        - call:
            service: s181
            size: 9.766KiB
        - call:
            service: s182
            size: 9.766KiB
        - call:
            service: s183
            size: 9.766KiB
        - call:
            service: s184
            size: 9.766KiB
        - call:
            service: s185
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s163
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s170
            size: 9.766KiB
        - call:
            service: s171
            size: 9.766KiB
        - call:
            service: s172
            size: 9.766KiB
        - call:
            service: s173
            size: 9.766KiB
        - call:
            service: s174
            size: 9.766KiB
        - call:
            service: s175
            size: 9.766KiB
        - call:
            service: s176
            size: 9.766KiB
        - call:
            service: s177
            size: 9.766KiB
        - call:
            service: s178
            size: 9.766KiB
        - call:
            service: s179
            size: 9.766KiB
        - call:
            service: s180
            size: 9.766KiB
        - call:
            service: s181
            size: 9.766KiB
        - call:
            service: s182
            size: 9.766KiB
        - call:
            service: s183
            size: 9.766KiB
        - call:
            service: s184
            size: 9.766KiB
        - call:
            service: s185
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s164
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s170
            size: 9.766KiB
        - call:
            service: s171
            size: 9.766KiB
        - call:
            service: s172
            size: 9.766KiB
        - call:
            service: s173
            size: 9.766KiB
        - call:
            service: s174
            size: 9.766KiB
        - call:
            service: s175
            size: 9.766KiB
        - call:
            service: s176
            size: 9.766KiB
        - call:
            service: s177
            size: 9.766KiB
        - call:
            service: s178
            size: 9.766KiB
        - call:
            service: s179
            size: 9.766KiB
        - call:
            service: s180
            size: 9.766KiB
        - call:
            service: s181
            size: 9.766KiB
        - call:
            service: s182
            size: 9.766KiB
        - call:
            service: s183
            size: 9.766KiB
        - call:
            service: s184
            size: 9.766KiB
        - call:
            service: s185
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s165
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s170
            size: 9.766KiB
        - call:
            service: s171
            size: 9.766KiB
        - call:
            service: s172
            size: 9.766KiB
        - call:
            service: s173
            size: 9.766KiB
        - call:
            service: s174
            size: 9.766KiB
        - call:
            service: s175
            size: 9.766KiB
        - call:
            service: s176
            size: 9.766KiB
        - call:
            service: s177
            size: 9.766KiB
        - call:
            service: s178
            size: 9.766KiB
        - call:
            service: s179
            size: 9.766KiB
        - call:
            service: s180
            size: 9.766KiB
        - call:
            service: s181
            size: 9.766KiB
        - call:
            service: s182
            size: 9.766KiB
        - call:
            service: s183
            size: 9.766KiB
        - call:
            service: s184
            size: 9.766KiB
        - call:
            service: s185
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s166
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s170
            size: 9.766KiB
        - call:
            service: s171
            size: 9.766KiB
        - call:
            service: s172
            size: 9.766KiB
        - call:
            service: s173
            size: 9.766KiB
        - call:
            service: s174
            size: 9.766KiB
        - call:
            service: s175
            size: 9.766KiB
        - call:
            service: s176
            size: 9.766KiB
        - call:
            service: s177
            size: 9.766KiB
        - call:
            service: s178
            size: 9.766KiB
        - call:
            service: s179
            size: 9.766KiB
        - call:
            service: s180
            size: 9.766KiB
        - call:
            service: s181
            size: 9.766KiB
        - call:
            service: s182
            size: 9.766KiB
        - call:
            service: s183
            size: 9.766KiB
        - call:
            service: s184
            size: 9.766KiB
        - call:
            service: s185
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s167
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s170
            size: 9.766KiB
        - call:
            service: s171
            size: 9.766KiB
        - call:
            service: s172
            size: 9.766KiB
        - call:
            service: s173
            size: 9.766KiB
        - call:
            service: s174
            size: 9.766KiB
        - call:
            service: s175
            size: 9.766KiB
        - call:
            service: s176
            size: 9.766KiB
        - call:
            service: s177
            size: 9.766KiB
        - call:
            service: s178
            size: 9.766KiB
        - call:
            service: s179
            size: 9.766KiB
        - call:
            service: s180
            size: 9.766KiB
        - call:
            service: s181
            size: 9.766KiB
        - call:
            service: s182
            size: 9.766KiB
        - call:
            service: s183
            size: 9.766KiB
        - call:
            service: s184
            size: 9.766KiB
        - call:
            service: s185
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s168
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s170
            size: 9.766KiB
        - call:
            service: s171
            size: 9.766KiB
        - call:
            service: s172
            size: 9.766KiB
        - call:
            service: s173
            size: 9.766KiB
        - call:
            service: s174
            size: 9.766KiB
        - call:
            service: s175
            size: 9.766KiB
        - call:
            service: s176
            size: 9.766KiB
        - call:
            service: s177
            size: 9.766KiB
        - call:
            service: s178
            size: 9.766KiB
        - call:
            service: s179
            size: 9.766KiB
        - call:
            service: s180
            size: 9.766KiB
        - call:
            service: s181
            size: 9.766KiB
        - call:
            service: s182
            size: 9.766KiB
        - call:
            service: s183
            size: 9.766KiB
        - call:
            service: s184
            size: 9.766KiB
        - call:
            service: s185
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s169
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s170
            size: 9.766KiB
        - call:
            service: s171
            size: 9.766KiB
        - call:
            service: s172
            size: 9.766KiB
        - call:
            service: s173
            size: 9.766KiB
        - call:
            service: s174
            size: 9.766KiB
        - call:
            service: s175
            size: 9.766KiB
        - call:
            service: s176
            size: 9.766KiB
        - call:
            service: s177
            size: 9.766KiB
        - call:
            service: s178
            size: 9.766KiB
        - call:
            service: s179
            size: 9.766KiB
        - call:
            service: s180
            size: 9.766KiB
        - call:
            service: s181
            size: 9.766KiB
        - call:
            service: s182
            size: 9.766KiB
        - call:
            service: s183
            size: 9.766KiB
        - call:
            service: s184
            size: 9.766KiB
        - call:
            service: s185
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s170
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s171
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s172
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s173
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s174
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s175
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s176
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s177
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s178
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s179
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s180
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s181
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s182
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s183
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s184
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s185
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s186
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s187
            size: 9.766KiB
        - call:
            service: s188
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s187
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s189
            size: 9.766KiB
        - call:
            service: s190
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s188
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s191
            size: 9.766KiB
        - call:
            service: s192
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s189
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s193
            size: 9.766KiB
        - call:
            service: s194
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s190
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s195
            size: 9.766KiB
        - call:
            service: s196
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s191
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s197
            size: 9.766KiB
        - call:
            service: s198
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s192
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s199
            size: 9.766KiB
        - call:
            service: s200
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s193
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s201
            size: 9.766KiB
        - call:
            service: s202
            size: 9.766KiB
        - call:
            service: s203
            size: 9.766KiB
        - call:
            service: s204
            size: 9.766KiB
        - call:
            service: s205
            size: 9.766KiB
        - call:
            service: s206
            size: 9.766KiB
        - call:
            service: s207
            size: 9.766KiB
        - call:
            service: s208
            size: 9.766KiB
        - call:
            service: s209
            size: 9.766KiB
        - call:
            service: s210
            size: 9.766KiB
        - call:
            service: s211
            size: 9.766KiB
        - call:
            service: s212
            size: 9.766KiB
        - call:
            service: s213
            size: 9.766KiB
        - call:
            service: s214
            size: 9.766KiB
        - call:
            service: s215
            size: 9.766KiB
        - call:
            service: s216
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s194
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s201
            size: 9.766KiB
        - call:
            service: s202
            size: 9.766KiB
        - call:
            service: s203
            size: 9.766KiB
        - call:
            service: s204
            size: 9.766KiB
        - call:
            service: s205
            size: 9.766KiB
        - call:
            service: s206
            size: 9.766KiB
        - call:
            service: s207
            size: 9.766KiB
        - call:
            service: s208
            size: 9.766KiB
        - call:
            service: s209
            size: 9.766KiB
        - call:
            service: s210
            size: 9.766KiB
        - call:
            service: s211
            size: 9.766KiB
        - call:
            service: s212
            size: 9.766KiB
        - call:
            service: s213
            size: 9.766KiB
        - call:
            service: s214
            size: 9.766KiB
        - call:
            service: s215
            size: 9.766KiB
        - call:
            service: s216
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s195
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s201
            size: 9.766KiB
        - call:
            service: s202
            size: 9.766KiB
        - call:
            service: s203
            size: 9.766KiB
        - call:
            service: s204
            size: 9.766KiB
        - call:
            service: s205
            size: 9.766KiB
        - call:
            service: s206
            size: 9.766KiB
        - call:
            service: s207
            size: 9.766KiB
        - call:
            service: s208
            size: 9.766KiB
        - call:
            service: s209
            size: 9.766KiB
        - call:
            service: s210
            size: 9.766KiB
        - call:
            service: s211
            size: 9.766KiB
        - call:
            service: s212
            size: 9.766KiB
        - call:
            service: s213
            size: 9.766KiB
        - call:
            service: s214
            size: 9.766KiB
        - call:
            service: s215
            size: 9.766KiB
        - call:
            service: s216
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s196
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s201
            size: 9.766KiB
        - call:
            service: s202
            size: 9.766KiB
        - call:
            service: s203
            size: 9.766KiB
        - call:
            service: s204
            size: 9.766KiB
        - call:
            service: s205
            size: 9.766KiB
        - call:
            service: s206
            size: 9.766KiB
        - call:
            service: s207
            size: 9.766KiB
        - call:
            service: s208
            size: 9.766KiB
        - call:
            service: s209
            size: 9.766KiB
        - call:
            service: s210
            size: 9.766KiB
        - call:
            service: s211
            size: 9.766KiB
        - call:
            service: s212
            size: 9.766KiB
        - call:
            service: s213
            size: 9.766KiB
        - call:
            service: s214
            size: 9.766KiB
        - call:
            service: s215
            size: 9.766KiB
        - call:
            service: s216
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s197
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s201
            size: 9.766KiB
        - call:
            service: s202
            size: 9.766KiB
        - call:
            service: s203
            size: 9.766KiB
        - call:
            service: s204
            size: 9.766KiB
        - call:
            service: s205
            size: 9.766KiB
        - call:
            service: s206
            size: 9.766KiB
        - call:
            service: s207
            size: 9.766KiB
        - call:
            service: s208
            size: 9.766KiB
        - call:
            service: s209
            size: 9.766KiB
        - call:
            service: s210
            size: 9.766KiB
        - call:
            service: s211
            size: 9.766KiB
        - call:
            service: s212
            size: 9.766KiB
        - call:
            service: s213
            size: 9.766KiB
        - call:
            service: s214
            size: 9.766KiB
        - call:
            service: s215
            size: 9.766KiB
        - call:
            service: s216
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s198
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s201
            size: 9.766KiB
        - call:
            service: s202
            size: 9.766KiB
        - call:
            service: s203
            size: 9.766KiB
        - call:
            service: s204
            size: 9.766KiB
        - call:
            service: s205
            size: 9.766KiB
        - call:
            service: s206
            size: 9.766KiB
        - call:
            service: s207
            size: 9.766KiB
        - call:
            service: s208
            size: 9.766KiB
        - call:
            service: s209
            size: 9.766KiB
        - call:
            service: s210
            size: 9.766KiB
        - call:
            service: s211
            size: 9.766KiB
        - call:
            service: s212
            size: 9.766KiB
        - call:
            service: s213
            size: 9.766KiB
        - call:
            service: s214
            size: 9.766KiB
        - call:
            service: s215
            size: 9.766KiB
        - call:
            service: s216
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s199
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s201
            size: 9.766KiB
        - call:
            service: s202
            size: 9.766KiB
        - call:
            service: s203
            size: 9.766KiB
        - call:
            service: s204
            size: 9.766KiB
        - call:
            service: s205
            size: 9.766KiB
        - call:
            service: s206
            size: 9.766KiB
        - call:
            service: s207
            size: 9.766KiB
        - call:
            service: s208
            size: 9.766KiB
        - call:
            service: s209
            size: 9.766KiB
        - call:
            service: s210
            size: 9.766KiB
        - call:
            service: s211
            size: 9.766KiB
        - call:
            service: s212
            size: 9.766KiB
        - call:
            service: s213
            size: 9.766KiB
        - call:
            service: s214
            size: 9.766KiB
        - call:
            service: s215
            size: 9.766KiB
        - call:
            service: s216
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s200
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s201
            size: 9.766KiB
        - call:
            service: s202
            size: 9.766KiB
        - call:
            service: s203
            size: 9.766KiB
        - call:
            service: s204
            size: 9.766KiB
        - call:
            service: s205
            size: 9.766KiB
        - call:
            service: s206
            size: 9.766KiB
        - call:
            service: s207
            size: 9.766KiB
        - call:
            service: s208
            size: 9.766KiB
        - call:
            service: s209
            size: 9.766KiB
        - call:
            service: s210
            size: 9.766KiB
        - call:
            service: s211
            size: 9.766KiB
        - call:
            service: s212
            size: 9.766KiB
        - call:
            service: s213
            size: 9.766KiB
        - call:
            service: s214
            size: 9.766KiB
        - call:
            service: s215
            size: 9.766KiB
        - call:
            service: s216
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s201
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s202
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s203
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s204
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s205
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s206
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s207
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s208
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s209
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s210
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s211
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s212
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s213
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s214
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s215
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s216
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      isEntrypoint: true
      name: s217
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s218
            size: 9.766KiB
        - call:
            service: s219
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s218
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s220
            size: 9.766KiB
        - call:
            service: s221
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s219
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s222
            size: 9.766KiB
        - call:
            service: s223
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s220
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s224
            size: 9.766KiB
        - call:
            service: s225
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s221
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s226
            size: 9.766KiB
        - call:
            service: s227
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s222
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s228
            size: 9.766KiB
        - call:
            service: s229
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s223
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s230
            size: 9.766KiB
        - call:
            service: s231
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s224
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s232
            size: 9.766KiB
        - call:
            service: s233
            size: 9.766KiB
        - call:
            service: s234
            size: 9.766KiB
        - call:
            service: s235
            size: 9.766KiB
        - call:
            service: s236
            size: 9.766KiB
        - call:
            service: s237
            size: 9.766KiB
        - call:
            service: s238
            size: 9.766KiB
        - call:
            service: s239
            size: 9.766KiB
        - call:
            service: s240
            size: 9.766KiB
        - call:
            service: s241
            size: 9.766KiB
        - call:
            service: s242
            size: 9.766KiB
        - call:
            service: s243
            size: 9.766KiB
        - call:
            service: s244
            size: 9.766KiB
        - call:
            service: s245
            size: 9.766KiB
        - call:
            service: s246
            size: 9.766KiB
        - call:
            service: s247
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s225
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s232
            size: 9.766KiB
        - call:
            service: s233
            size: 9.766KiB
        - call:
            service: s234
            size: 9.766KiB
        - call:
            service: s235
            size: 9.766KiB
        - call:
            service: s236
            size: 9.766KiB
        - call:
            service: s237
            size: 9.766KiB
        - call:
            service: s238
            size: 9.766KiB
        - call:
            service: s239
            size: 9.766KiB
        - call:
            service: s240
            size: 9.766KiB
        - call:
            service: s241
            size: 9.766KiB
        - call:
            service: s242
            size: 9.766KiB
        - call:
            service: s243
            size: 9.766KiB
        - call:
            service: s244
            size: 9.766KiB
        - call:
            service: s245
            size: 9.766KiB
        - call:
            service: s246
            size: 9.766KiB
        - call:
            service: s247
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s226
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s232
            size: 9.766KiB
        - call:
            service: s233
            size: 9.766KiB
        - call:
            service: s234
            size: 9.766KiB
        - call:
            service: s235
            size: 9.766KiB
        - call:
            service: s236
            size: 9.766KiB
        - call:
            service: s237
            size: 9.766KiB
        - call:
            service: s238
            size: 9.766KiB
        - call:
            service: s239
            size: 9.766KiB
        - call:
            service: s240
            size: 9.766KiB
        - call:
            service: s241
            size: 9.766KiB
        - call:
            service: s242
            size: 9.766KiB
        - call:
            service: s243
            size: 9.766KiB
        - call:
            service: s244
            size: 9.766KiB
        - call:
            service: s245
            size: 9.766KiB
        - call:
            service: s246
            size: 9.766KiB
        - call:
            service: s247
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s227
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s232
            size: 9.766KiB
        - call:
            service: s233
            size: 9.766KiB
        - call:
            service: s234
            size: 9.766KiB
        - call:
            service: s235
            size: 9.766KiB
        - call:
            service: s236
            size: 9.766KiB
        - call:
            service: s237
            size: 9.766KiB
        - call:
            service: s238
            size: 9.766KiB
        - call:
            service: s239
            size: 9.766KiB
        - call:
            service: s240
            size: 9.766KiB
        - call:
            service: s241
            size: 9.766KiB
        - call:
            service: s242
            size: 9.766KiB
        - call:
            service: s243
            size: 9.766KiB
        - call:
            service: s244
            size: 9.766KiB
        - call:
            service: s245
            size: 9.766KiB
        - call:
            service: s246
            size: 9.766KiB
        - call:
            service: s247
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s228
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s232
            size: 9.766KiB
        - call:
            service: s233
            size: 9.766KiB
        - call:
            service: s234
            size: 9.766KiB
        - call:
            service: s235
            size: 9.766KiB
        - call:
            service: s236
            size: 9.766KiB
        - call:
            service: s237
            size: 9.766KiB
        - call:
            service: s238
            size: 9.766KiB
        - call:
            service: s239
            size: 9.766KiB
        - call:
            service: s240
            size: 9.766KiB
        - call:
            service: s241
            size: 9.766KiB
        - call:
            service: s242
            size: 9.766KiB
        - call:
            service: s243
            size: 9.766KiB
        - call:
            service: s244
            size: 9.766KiB
        - call:
            service: s245
            size: 9.766KiB
        - call:
            service: s246
            size: 9.766KiB
        - call:
            service: s247
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s229
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s232
            size: 9.766KiB
        - call:
            service: s233
            size: 9.766KiB
        - call:
            service: s234
            size: 9.766KiB
        - call:
            service: s235
            size: 9.766KiB
        - call:
            service: s236
            size: 9.766KiB
        - call:
            service: s237
            size: 9.766KiB
        - call:
            service: s238
            size: 9.766KiB
        - call:
            service: s239
            size: 9.766KiB
        - call:
            service: s240
            size: 9.766KiB
        - call:
            service: s241
            size: 9.766KiB
        - call:
            service: s242
            size: 9.766KiB
        - call:
            service: s243
            size: 9.766KiB
        - call:
            service: s244
            size: 9.766KiB
        - call:
            service: s245
            size: 9.766KiB
        - call:
            service: s246
            size: 9.766KiB
        - call:
            service: s247
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s230
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s232
            size: 9.766KiB
        - call:
            service: s233
            size: 9.766KiB
        - call:
            service: s234
            size: 9.766KiB
        - call:
            service: s235
            size: 9.766KiB
        - call:
            service: s236
            size: 9.766KiB
        - call:
            service: s237
            size: 9.766KiB
        - call:
            service: s238
            size: 9.766KiB
        - call:
            service: s239
            size: 9.766KiB
        - call:
            service: s240
            size: 9.766KiB
        - call:
            service: s241
            size: 9.766KiB
        - call:
            service: s242
            size: 9.766KiB
        - call:
            service: s243
            size: 9.766KiB
        - call:
            service: s244
            size: 9.766KiB
        - call:
            service: s245
            size: 9.766KiB
        - call:
            service: s246
            size: 9.766KiB
        - call:
            service: s247
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s231
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s232
            size: 9.766KiB
        - call:
            service: s233
            size: 9.766KiB
        - call:
            service: s234
            size: 9.766KiB
        - call:
            service: s235
            size: 9.766KiB
        - call:
            service: s236
            size: 9.766KiB
        - call:
            service: s237
            size: 9.766KiB
        - call:
            service: s238
            size: 9.766KiB
        - call:
            service: s239
            size: 9.766KiB
        - call:
            service: s240
            size: 9.766KiB
        - call:
            service: s241
            size: 9.766KiB
        - call:
            service: s242
            size: 9.766KiB
        - call:
            service: s243
            size: 9.766KiB
        - call:
            service: s244
            size: 9.766KiB
        - call:
            service: s245
            size: 9.766KiB
        - call:
            service: s246
            size: 9.766KiB
        - call:
            service: s247
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s232
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s233
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s234
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s235
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s236
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s237
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s238
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s239
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s240
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s241
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s242
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s243
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s244
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s245
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s246
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s247
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      isEntrypoint: true
      name: s248
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s249
            size: 9.766KiB
        - call:
            service: s250
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s249
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s251
            size: 9.766KiB
        - call:
            service: s252
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s250
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s253
            size: 9.766KiB
        - call:
            service: s254
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s251
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s255
            size: 9.766KiB
        - call:
            service: s256
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s252
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s257
            size: 9.766KiB
        - call:
            service: s258
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s253
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s259
            size: 9.766KiB
        - call:
            service: s260
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s254
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s261
            size: 9.766KiB
        - call:
            service: s262
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s255
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s263
            size: 9.766KiB
        - call:
            service: s264
            size: 9.766KiB
        - call:
            service: s265
            size: 9.766KiB
        - call:
            service: s266
            size: 9.766KiB
        - call:
            service: s267
            size: 9.766KiB
        - call:
            service: s268
            size: 9.766KiB
        - call:
            service: s269
            size: 9.766KiB
        - call:
            service: s270
            size: 9.766KiB
        - call:
            service: s271
            size: 9.766KiB
        - call:
            service: s272
            size: 9.766KiB
        - call:
            service: s273
            size: 9.766KiB
        - call:
            service: s274
            size: 9.766KiB
        - call:
            service: s275
            size: 9.766KiB
        - call:
            service: s276
            size: 9.766KiB
        - call:
            service: s277
            size: 9.766KiB
        - call:
            service: s278
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s256
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s263
            size: 9.766KiB
        - call:
            service: s264
            size: 9.766KiB
        - call:
            service: s265
            size: 9.766KiB
        - call:
            service: s266
            size: 9.766KiB
        - call:
            service: s267
            size: 9.766KiB
        - call:
            service: s268
            size: 9.766KiB
        - call:
            service: s269
            size: 9.766KiB
        - call:
            service: s270
            size: 9.766KiB
        - call:
            service: s271
            size: 9.766KiB
        - call:
            service: s272
            size: 9.766KiB
        - call:
            service: s273
            size: 9.766KiB
        - call:
            service: s274
            size: 9.766KiB
        - call:
            service: s275
            size: 9.766KiB
        - call:
            service: s276
            size: 9.766KiB
        - call:
            service: s277
            size: 9.766KiB
        - call:
            service: s278
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s257
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s263
            size: 9.766KiB
        - call:
            service: s264
            size: 9.766KiB
        - call:
            service: s265
            size: 9.766KiB
        - call:
            service: s266
            size: 9.766KiB
        - call:
            service: s267
            size: 9.766KiB
        - call:
            service: s268
            size: 9.766KiB
        - call:
            service: s269
            size: 9.766KiB
        - call:
            service: s270
            size: 9.766KiB
        - call:
            service: s271
            size: 9.766KiB
        - call:
            service: s272
            size: 9.766KiB
        - call:
            service: s273
            size: 9.766KiB
        - call:
            service: s274
            size: 9.766KiB
        - call:
            service: s275
            size: 9.766KiB
        - call:
            service: s276
            size: 9.766KiB
        - call:
            service: s277
            size: 9.766KiB
        - call:
            service: s278
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s258
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s263
            size: 9.766KiB
        - call:
            service: s264
            size: 9.766KiB
        - call:
            service: s265
            size: 9.766KiB
        - call:
            service: s266
            size: 9.766KiB
        - call:
            service: s267
            size: 9.766KiB
        - call:
            service: s268
            size: 9.766KiB
        - call:
            service: s269
            size: 9.766KiB
        - call:
            service: s270
            size: 9.766KiB
        - call:
            service: s271
            size: 9.766KiB
        - call:
            service: s272
            size: 9.766KiB
        - call:
            service: s273
            size: 9.766KiB
        - call:
            service: s274
            size: 9.766KiB
        - call:
            service: s275
            size: 9.766KiB
        - call:
            service: s276
            size: 9.766KiB
        - call:
            service: s277
            size: 9.766KiB
        - call:
            service: s278
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s259
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s263
            size: 9.766KiB
        - call:
            service: s264
            size: 9.766KiB
        - call:
            service: s265
            size: 9.766KiB
        - call:
            service: s266
            size: 9.766KiB
        - call:
            service: s267
            size: 9.766KiB
        - call:
            service: s268
            size: 9.766KiB
        - call:
            service: s269
            size: 9.766KiB
        - call:
            service: s270
            size: 9.766KiB
        - call:
            service: s271
            size: 9.766KiB
        - call:
            service: s272
            size: 9.766KiB
        - call:
            service: s273
            size: 9.766KiB
        - call:
            service: s274
            size: 9.766KiB
        - call:
            service: s275
            size: 9.766KiB
        - call:
            service: s276
            size: 9.766KiB
        - call:
            service: s277
            size: 9.766KiB
        - call:
            service: s278
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s260
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s263
            size: 9.766KiB
        - call:
            service: s264
            size: 9.766KiB
        - call:
            service: s265
            size: 9.766KiB
        - call:
            service: s266
            size: 9.766KiB
        - call:
            service: s267
            size: 9.766KiB
        - call:
            service: s268
            size: 9.766KiB
        - call:
            service: s269
            size: 9.766KiB
        - call:
            service: s270
            size: 9.766KiB
        - call:
            service: s271
            size: 9.766KiB
        - call:
            service: s272
            size: 9.766KiB
        - call:
            service: s273
            size: 9.766KiB
        - call:
            service: s274
            size: 9.766KiB
        - call:
            service: s275
            size: 9.766KiB
        - call:
            service: s276
            size: 9.766KiB
        - call:
            service: s277
            size: 9.766KiB
        - call:
            service: s278
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s261
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s263
            size: 9.766KiB
        - call:
            service: s264
            size: 9.766KiB
        - call:
            service: s265
            size: 9.766KiB
        - call:
            service: s266
            size: 9.766KiB
        - call:
            service: s267
            size: 9.766KiB
        - call:
            service: s268
            size: 9.766KiB
        - call:
            service: s269
            size: 9.766KiB
        - call:
            service: s270
            size: 9.766KiB
        - call:
            service: s271
            size: 9.766KiB
        - call:
            service: s272
            size: 9.766KiB
        - call:
            service: s273
            size: 9.766KiB
        - call:
            service: s274
            size: 9.766KiB
        - call:
            service: s275
            size: 9.766KiB
        - call:
            service: s276
            size: 9.766KiB
        - call:
            service: s277
            size: 9.766KiB
        - call:
            service: s278
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s262
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s263
            size: 9.766KiB
        - call:
            service: s264
            size: 9.766KiB
        - call:
            service: s265
            size: 9.766KiB
        - call:
            service: s266
            size: 9.766KiB
        - call:
            service: s267
            size: 9.766KiB
        - call:
            service: s268
            size: 9.766KiB
        - call:
            service: s269
            size: 9.766KiB
        - call:
            service: s270
            size: 9.766KiB
        - call:
            service: s271
            size: 9.766KiB
        - call:
            service: s272
            size: 9.766KiB
        - call:
            service: s273
            size: 9.766KiB
        - call:
            service: s274
            size: 9.766KiB
        - call:
            service: s275
            size: 9.766KiB
        - call:
            service: s276
            size: 9.766KiB
        - call:
            service: s277
            size: 9.766KiB
        - call:
            service: s278
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s263
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s264
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s265
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s266
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s267
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s268
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s269
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s270
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s271
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s272
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s273
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s274
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s275
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s276
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s277
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s278
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s279
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s280
            size: 9.766KiB
        - call:
            service: s281
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s280
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s282
            size: 9.766KiB
        - call:
            service: s283
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s281
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s284
            size: 9.766KiB
        - call:
            service: s285
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s282
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s286
            size: 9.766KiB
        - call:
            service: s287
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s283
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s288
            size: 9.766KiB
        - call:
            service: s289
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s284
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s290
            size: 9.766KiB
        - call:
            service: s291
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s285
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s292
            size: 9.766KiB
        - call:
            service: s293
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s286
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s294
            size: 9.766KiB
        - call:
            service: s295
            size: 9.766KiB
        - call:
            service: s296
            size: 9.766KiB
        - call:
            service: s297
            size: 9.766KiB
        - call:
            service: s298
            size: 9.766KiB
        - call:
            service: s299
            size: 9.766KiB
        - call:
            service: s300
            size: 9.766KiB
        - call:
            service: s301
            size: 9.766KiB
        - call:
            service: s302
            size: 9.766KiB
        - call:
            service: s303
            size: 9.766KiB
        - call:
            service: s304
            size: 9.766KiB
        - call:
            service: s305
            size: 9.766KiB
        - call:
            service: s306
            size: 9.766KiB
        - call:
            service: s307
            size: 9.766KiB
        - call:
            service: s308
            size: 9.766KiB
        - call:
            service: s309
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s287
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s294
            size: 9.766KiB
        - call:
            service: s295
            size: 9.766KiB
        - call:
            service: s296
            size: 9.766KiB
        - call:
            service: s297
            size: 9.766KiB
        - call:
            service: s298
            size: 9.766KiB
        - call:
            service: s299
            size: 9.766KiB
        - call:
            service: s300
            size: 9.766KiB
        - call:
            service: s301
            size: 9.766KiB
        - call:
            service: s302
            size: 9.766KiB
        - call:
            service: s303
            size: 9.766KiB
        - call:
            service: s304
            size: 9.766KiB
        - call:
            service: s305
            size: 9.766KiB
        - call:
            service: s306
            size: 9.766KiB
        - call:
            service: s307
            size: 9.766KiB
        - call:
            service: s308
            size: 9.766KiB
        - call:
            service: s309
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s288
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s294
            size: 9.766KiB
        - call:
            service: s295
            size: 9.766KiB
        - call:
            service: s296
            size: 9.766KiB
        - call:
            service: s297
            size: 9.766KiB
        - call:
            service: s298
            size: 9.766KiB
        - call:
            service: s299
            size: 9.766KiB
        - call:
            service: s300
            size: 9.766KiB
        - call:
            service: s301
            size: 9.766KiB
        - call:
            service: s302
            size: 9.766KiB
        - call:
            service: s303
            size: 9.766KiB
        - call:
            service: s304
            size: 9.766KiB
        - call:
            service: s305
            size: 9.766KiB
        - call:
            service: s306
            size: 9.766KiB
        - call:
            service: s307
            size: 9.766KiB
        - call:
            service: s308
            size: 9.766KiB
        - call:
            service: s309
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s289
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s294
            size: 9.766KiB
        - call:
            service: s295
            size: 9.766KiB
        - call:
            service: s296
            size: 9.766KiB
        - call:
            service: s297
            size: 9.766KiB
        - call:
            service: s298
            size: 9.766KiB
        - call:
            service: s299
            size: 9.766KiB
        - call:
            service: s300
            size: 9.766KiB
        - call:
            service: s301
            size: 9.766KiB
        - call:
            service: s302
            size: 9.766KiB
        - call:
            service: s303
            size: 9.766KiB
        - call:
            service: s304
            size: 9.766KiB
        - call:
            service: s305
            size: 9.766KiB
        - call:
            service: s306
            size: 9.766KiB
        - call:
            service: s307
            size: 9.766KiB
        - call:
            service: s308
            size: 9.766KiB
        - call:
            service: s309
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s290
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s294
            size: 9.766KiB
        - call:
            service: s295
            size: 9.766KiB
        - call:
            service: s296
            size: 9.766KiB
        - call:
            service: s297
            size: 9.766KiB
        - call:
            service: s298
            size: 9.766KiB
        - call:
            service: s299
            size: 9.766KiB
        - call:
            service: s300
            size: 9.766KiB
        - call:
            service: s301
            size: 9.766KiB
        - call:
            service: s302
            size: 9.766KiB
        - call:
            service: s303
            size: 9.766KiB
        - call:
            service: s304
            size: 9.766KiB
        - call:
            service: s305
            size: 9.766KiB
        - call:
            service: s306
            size: 9.766KiB
        - call:
            service: s307
            size: 9.766KiB
        - call:
            service: s308
            size: 9.766KiB
        - call:
            service: s309
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s291
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s294
            size: 9.766KiB
        - call:
            service: s295
            size: 9.766KiB
        - call:
            service: s296
            size: 9.766KiB
        - call:
            service: s297
            size: 9.766KiB
        - call:
            service: s298
            size: 9.766KiB
        - call:
            service: s299
            size: 9.766KiB
        - call:
            service: s300
            size: 9.766KiB
        - call:
            service: s301
            size: 9.766KiB
        - call:
            service: s302
            size: 9.766KiB
        - call:
            service: s303
            size: 9.766KiB
        - call:
            service: s304
            size: 9.766KiB
        - call:
            service: s305
            size: 9.766KiB
        - call:
            service: s306
            size: 9.766KiB
        - call:
            service: s307
            size: 9.766KiB
        - call:
            service: s308
            size: 9.766KiB
        - call:
            service: s309
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s292
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s294
            size: 9.766KiB
        - call:
            service: s295
            size: 9.766KiB
        - call:
            service: s296
            size: 9.766KiB
        - call:
            service: s297
            size: 9.766KiB
        - call:
            service: s298
            size: 9.766KiB
        - call:
            service: s299
            size: 9.766KiB
        - call:
            service: s300
            size: 9.766KiB
        - call:
            service: s301
            size: 9.766KiB
        - call:
            service: s302
            size: 9.766KiB
        - call:
            service: s303
            size: 9.766KiB
        - call:
            service: s304
            size: 9.766KiB
        - call:
            service: s305
            size: 9.766KiB
        - call:
            service: s306
            size: 9.766KiB
        - call:
            service: s307
            size: 9.766KiB
        - call:
            service: s308
            size: 9.766KiB
        - call:
            service: s309
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s293
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s294
            size: 9.766KiB
        - call:
            service: s295
            size: 9.766KiB
        - call:
            service: s296
            size: 9.766KiB
        - call:
            service: s297
            size: 9.766KiB
        - call:
            service: s298
            size: 9.766KiB
        - call:
            service: s299
            size: 9.766KiB
        - call:
            service: s300
            size: 9.766KiB
        - call:
            service: s301
            size: 9.766KiB
        - call:
            service: s302
            size: 9.766KiB
        - call:
            service: s303
            size: 9.766KiB
        - call:
            service: s304
            size: 9.766KiB
        - call:
            service: s305
            size: 9.766KiB
        - call:
            service: s306
            size: 9.766KiB
        - call:
            service: s307
            size: 9.766KiB
        - call:
            service: s308
            size: 9.766KiB
        - call:
            service: s309
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s294
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s295
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s296
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s297
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s298
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s299
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s300
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s301
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s302
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s303
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s304
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s305
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s306
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s307
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s308
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s309
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s310
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s311
            size: 9.766KiB
        - call:
            service: s312
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s311
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s313
            size: 9.766KiB
        - call:
            service: s314
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s312
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s315
            size: 9.766KiB
        - call:
            service: s316
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s313
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s317
            size: 9.766KiB
        - call:
            service: s318
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s314
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s319
            size: 9.766KiB
        - call:
            service: s320
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s315
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s321
            size: 9.766KiB
        - call:
            service: s322
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s316
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s323
            size: 9.766KiB
        - call:
            service: s324
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s317
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s325
            size: 9.766KiB
        - call:
            service: s326
            size: 9.766KiB
        - call:
            service: s327
            size: 9.766KiB
        - call:
            service: s328
            size: 9.766KiB
        - call:
            service: s329
            size: 9.766KiB
        - call:
            service: s330
            size: 9.766KiB
        - call:
            service: s331
            size: 9.766KiB
        - call:
            service: s332
            size: 9.766KiB
        - call:
            service: s333
            size: 9.766KiB
        - call:
            service: s334
            size: 9.766KiB
        - call:
            service: s335
            size: 9.766KiB
        - call:
            service: s336
            size: 9.766KiB
        - call:
            service: s337
            size: 9.766KiB
        - call:
            service: s338
            size: 9.766KiB
        - call:
            service: s339
            size: 9.766KiB
        - call:
            service: s340
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s318
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s325
            size: 9.766KiB
        - call:
            service: s326
            size: 9.766KiB
        - call:
            service: s327
            size: 9.766KiB
        - call:
            service: s328
            size: 9.766KiB
        - call:
            service: s329
            size: 9.766KiB
        - call:
            service: s330
            size: 9.766KiB
        - call:
            service: s331
            size: 9.766KiB
        - call:
            service: s332
            size: 9.766KiB
        - call:
            service: s333
            size: 9.766KiB
        - call:
            service: s334
            size: 9.766KiB
        - call:
            service: s335
            size: 9.766KiB
        - call:
            service: s336
            size: 9.766KiB
        - call:
            service: s337
            size: 9.766KiB
        - call:
            service: s338
            size: 9.766KiB
        - call:
            service: s339
            size: 9.766KiB
        - call:
            service: s340
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s319
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s325
            size: 9.766KiB
        - call:
            service: s326
            size: 9.766KiB
        - call:
            service: s327
            size: 9.766KiB
        - call:
            service: s328
            size: 9.766KiB
        - call:
            service: s329
            size: 9.766KiB
        - call:
            service: s330
            size: 9.766KiB
        - call:
            service: s331
            size: 9.766KiB
        - call:
            service: s332
            size: 9.766KiB
        - call:
            service: s333
            size: 9.766KiB
        - call:
            service: s334
            size: 9.766KiB
        - call:
            service: s335
            size: 9.766KiB
        - call:
            service: s336
            size: 9.766KiB
        - call:
            service: s337
            size: 9.766KiB
        - call:
            service: s338
            size: 9.766KiB
        - call:
            service: s339
            size: 9.766KiB
        - call:
            service: s340
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s320
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s325
            size: 9.766KiB
        - call:
            service: s326
            size: 9.766KiB
        - call:
            service: s327
            size: 9.766KiB
        - call:
            service: s328
            size: 9.766KiB
        - call:
            service: s329
            size: 9.766KiB
        - call:
            service: s330
            size: 9.766KiB
        - call:
            service: s331
            size: 9.766KiB
        - call:
            service: s332
            size: 9.766KiB
        - call:
            service: s333
            size: 9.766KiB
        - call:
            service: s334
            size: 9.766KiB
        - call:
            service: s335
            size: 9.766KiB
        - call:
            service: s336
            size: 9.766KiB
        - call:
            service: s337
            size: 9.766KiB
        - call:
            service: s338
            size: 9.766KiB
        - call:
            service: s339
            size: 9.766KiB
        - call:
            service: s340
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s321
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s325
            size: 9.766KiB
        - call:
            service: s326
            size: 9.766KiB
        - call:
            service: s327
            size: 9.766KiB
        - call:
            service: s328
            size: 9.766KiB
        - call:
            service: s329
            size: 9.766KiB
        - call:
            service: s330
            size: 9.766KiB
        - call:
            service: s331
            size: 9.766KiB
        - call:
            service: s332
            size: 9.766KiB
        - call:
            service: s333
            size: 9.766KiB
        - call:
            service: s334
            size: 9.766KiB
        - call:
            service: s335
            size: 9.766KiB
        - call:
            service: s336
            size: 9.766KiB
        - call:
            service: s337
            size: 9.766KiB
        - call:
            service: s338
            size: 9.766KiB
        - call:
            service: s339
            size: 9.766KiB
        - call:
            service: s340
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s322
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s325
            size: 9.766KiB
        - call:
            service: s326
            size: 9.766KiB
        - call:
            service: s327
            size: 9.766KiB
        - call:
            service: s328
            size: 9.766KiB
        - call:
            service: s329
            size: 9.766KiB
        - call:
            service: s330
            size: 9.766KiB
        - call:
            service: s331
            size: 9.766KiB
        - call:
            service: s332
            size: 9.766KiB
        - call:
            service: s333
            size: 9.766KiB
        - call:
            service: s334
            size: 9.766KiB
        - call:
            service: s335
            size: 9.766KiB
        - call:
            service: s336
            size: 9.766KiB
        - call:
            service: s337
            size: 9.766KiB
        - call:
            service: s338
            size: 9.766KiB
        - call:
            service: s339
            size: 9.766KiB
        - call:
            service: s340
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s323
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s325
            size: 9.766KiB
        - call:
            service: s326
            size: 9.766KiB
        - call:
            service: s327
            size: 9.766KiB
        - call:
            service: s328
            size: 9.766KiB
        - call:
            service: s329
            size: 9.766KiB
        - call:
            service: s330
            size: 9.766KiB
        - call:
            service: s331
            size: 9.766KiB
        - call:
            service: s332
            size: 9.766KiB
        - call:
            service: s333
            size: 9.766KiB
        - call:
            service: s334
            size: 9.766KiB
        - call:
            service: s335
            size: 9.766KiB
        - call:
            service: s336
            size: 9.766KiB
        - call:
            service: s337
            size: 9.766KiB
        - call:
            service: s338
            size: 9.766KiB
        - call:
            service: s339
            size: 9.766KiB
        - call:
            service: s340
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s324
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s325
            size: 9.766KiB
        - call:
            service: s326
            size: 9.766KiB
        - call:
            service: s327
            size: 9.766KiB
        - call:
            service: s328
            size: 9.766KiB
        - call:
            service: s329
            size: 9.766KiB
        - call:
            service: s330
            size: 9.766KiB
        - call:
            service: s331
            size: 9.766KiB
        - call:
            service: s332
            size: 9.766KiB
        - call:
            service: s333
            size: 9.766KiB
        - call:
            service: s334
            size: 9.766KiB
        - call:
            service: s335
            size: 9.766KiB
        - call:
            service: s336
            size: 9.766KiB
        - call:
            service: s337
            size: 9.766KiB
        - call:
            service: s338
            size: 9.766KiB
        - call:
            service: s339
            size: 9.766KiB
        - call:
            service: s340
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s325
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s326
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s327
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s328
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s329
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s330
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s331
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s332
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s333
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s334
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s335
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s336
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s337
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s338
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s339
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s340
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s341
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s342
            size: 9.766KiB
        - call:
            service: s343
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s342
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s344
            size: 9.766KiB
        - call:
            service: s345
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s343
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s346
            size: 9.766KiB
        - call:
            service: s347
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s344
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s348
            size: 9.766KiB
        - call:
            service: s349
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s345
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s350
            size: 9.766KiB
        - call:
            service: s351
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s346
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s352
            size: 9.766KiB
        - call:
            service: s353
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s347
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s354
            size: 9.766KiB
        - call:
            service: s355
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s348
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s356
            size: 9.766KiB
        - call:
            service: s357
            size: 9.766KiB
        - call:
            service: s358
            size: 9.766KiB
        - call:
            service: s359
            size: 9.766KiB
        - call:
            service: s360
            size: 9.766KiB
        - call:
            service: s361
            size: 9.766KiB
        - call:
            service: s362
            size: 9.766KiB
        - call:
            service: s363
            size: 9.766KiB
        - call:
            service: s364
            size: 9.766KiB
        - call:
            service: s365
            size: 9.766KiB
        - call:
            service: s366
            size: 9.766KiB
        - call:
            service: s367
            size: 9.766KiB
        - call:
            service: s368
            size: 9.766KiB
        - call:
            service: s369
            size: 9.766KiB
        - call:
            service: s370
            size: 9.766KiB
        - call:
            service: s371
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s349
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s356
            size: 9.766KiB
        - call:
            service: s357
            size: 9.766KiB
        - call:
            service: s358
            size: 9.766KiB
        - call:
            service: s359
            size: 9.766KiB
        - call:
            service: s360
            size: 9.766KiB
        - call:
            service: s361
            size: 9.766KiB
        - call:
            service: s362
            size: 9.766KiB
        - call:
            service: s363
            size: 9.766KiB
        - call:
            service: s364
            size: 9.766KiB
        - call:
            service: s365
            size: 9.766KiB
        - call:
            service: s366
            size: 9.766KiB
        - call:
            service: s367
            size: 9.766KiB
        - call:
            service: s368
            size: 9.766KiB
        - call:
            service: s369
            size: 9.766KiB
        - call:
            service: s370
            size: 9.766KiB
        - call:
            service: s371
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s350
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s356
            size: 9.766KiB
        - call:
            service: s357
            size: 9.766KiB
        - call:
            service: s358
            size: 9.766KiB
        - call:
            service: s359
            size: 9.766KiB
        - call:
            service: s360
            size: 9.766KiB
        - call:
            service: s361
            size: 9.766KiB
        - call:
            service: s362
            size: 9.766KiB
        - call:
            service: s363
            size: 9.766KiB
        - call:
            service: s364
            size: 9.766KiB
        - call:
            service: s365
            size: 9.766KiB
        - call:
            service: s366
            size: 9.766KiB
        - call:
            service: s367
            size: 9.766KiB
        - call:
            service: s368
            size: 9.766KiB
        - call:
            service: s369
            size: 9.766KiB
        - call:
            service: s370
            size: 9.766KiB
        - call:
            service: s371
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s351
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s356
            size: 9.766KiB
        - call:
            service: s357
            size: 9.766KiB
        - call:
            service: s358
            size: 9.766KiB
        - call:
            service: s359
            size: 9.766KiB
        - call:
            service: s360
            size: 9.766KiB
        - call:
            service: s361
            size: 9.766KiB
        - call:
            service: s362
            size: 9.766KiB
        - call:
            service: s363
            size: 9.766KiB
        - call:
            service: s364
            size: 9.766KiB
        - call:
            service: s365
            size: 9.766KiB
        - call:
            service: s366
            size: 9.766KiB
        - call:
            service: s367
            size: 9.766KiB
        - call:
            service: s368
            size: 9.766KiB
        - call:
            service: s369
            size: 9.766KiB
        - call:
            service: s370
            size: 9.766KiB
        - call:
            service: s371
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s352
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s356
            size: 9.766KiB
        - call:
            service: s357
            size: 9.766KiB
        - call:
            service: s358
            size: 9.766KiB
        - call:
            service: s359
            size: 9.766KiB
        - call:
            service: s360
            size: 9.766KiB
        - call:
            service: s361
            size: 9.766KiB
        - call:
            service: s362
            size: 9.766KiB
        - call:
            service: s363
            size: 9.766KiB
        - call:
            service: s364
            size: 9.766KiB
        - call:
            service: s365
            size: 9.766KiB
        - call:
            service: s366
            size: 9.766KiB
        - call:
            service: s367
            size: 9.766KiB
        - call:
            service: s368
            size: 9.766KiB
        - call:
            service: s369
            size: 9.766KiB
        - call:
            service: s370
            size: 9.766KiB
        - call:
            service: s371
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s353
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s356
            size: 9.766KiB
        - call:
            service: s357
            size: 9.766KiB
        - call:
            service: s358
            size: 9.766KiB
        - call:
            service: s359
            size: 9.766KiB
        - call:
            service: s360
            size: 9.766KiB
        - call:
            service: s361
            size: 9.766KiB
        - call:
            service: s362
            size: 9.766KiB
        - call:
            service: s363
            size: 9.766KiB
        - call:
            service: s364
            size: 9.766KiB
        - call:
            service: s365
            size: 9.766KiB
        - call:
            service: s366
            size: 9.766KiB
        - call:
            service: s367
            size: 9.766KiB
        - call:
            service: s368
            size: 9.766KiB
        - call:
            service: s369
            size: 9.766KiB
        - call:
            service: s370
            size: 9.766KiB
        - call:
            service: s371
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s354
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s356
            size: 9.766KiB
        - call:
            service: s357
            size: 9.766KiB
        - call:
            service: s358
            size: 9.766KiB
        - call:
            service: s359
            size: 9.766KiB
        - call:
            service: s360
            size: 9.766KiB
        - call:
            service: s361
            size: 9.766KiB
        - call:
            service: s362
            size: 9.766KiB
        - call:
            service: s363
            size: 9.766KiB
        - call:
            service: s364
            size: 9.766KiB
        - call:
            service: s365
            size: 9.766KiB
        - call:
            service: s366
            size: 9.766KiB
        - call:
            service: s367
            size: 9.766KiB
        - call:
            service: s368
            size: 9.766KiB
        - call:
            service: s369
            size: 9.766KiB
        - call:
            service: s370
            size: 9.766KiB
        - call:
            service: s371
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s355
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s356
            size: 9.766KiB
        - call:
            service: s357
            size: 9.766KiB
        - call:
            service: s358
            size: 9.766KiB
        - call:
            service: s359
            size: 9.766KiB
        - call:
            service: s360
            size: 9.766KiB
        - call:
            service: s361
            size: 9.766KiB
        - call:
            service: s362
            size: 9.766KiB
        - call:
            service: s363
            size: 9.766KiB
        - call:
            service: s364
            size: 9.766KiB
        - call:
            service: s365
            size: 9.766KiB
        - call:
            service: s366
            size: 9.766KiB
        - call:
            service: s367
            size: 9.766KiB
        - call:
            service: s368
            size: 9.766KiB
        - call:
            service: s369
            size: 9.766KiB
        - call:
            service: s370
            size: 9.766KiB
        - call:
            service: s371
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s356
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s357
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s358
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s359
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s360
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s361
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s362
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s363
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s364
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s365
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s366
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s367
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s368
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s369
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s370
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s371
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      isEntrypoint: true
      name: s372
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s373
            size: 9.766KiB
        - call:
            service: s374
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s373
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s375
            size: 9.766KiB
        - call:
            service: s376
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s374
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s377
            size: 9.766KiB
        - call:
            service: s378
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s375
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s379
            size: 9.766KiB
        - call:
            service: s380
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s376
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s381
            size: 9.766KiB
        - call:
            service: s382
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s377
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s383
            size: 9.766KiB
        - call:
            service: s384
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s378
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s385
            size: 9.766KiB
        - call:
            service: s386
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s379
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s387
            size: 9.766KiB
        - call:
            service: s388
            size: 9.766KiB
        - call:
            service: s389
            size: 9.766KiB
        - call:
            service: s390
            size: 9.766KiB
        - call:
            service: s391
            size: 9.766KiB
        - call:
            service: s392
            size: 9.766KiB
        - call:
            service: s393
            size: 9.766KiB
        - call:
            service: s394
            size: 9.766KiB
        - call:
            service: s395
            size: 9.766KiB
        - call:
            service: s396
            size: 9.766KiB
        - call:
            service: s397
            size: 9.766KiB
        - call:
            service: s398
            size: 9.766KiB
        - call:
            service: s399
            size: 9.766KiB
        - call:
            service: s400
            size: 9.766KiB
        - call:
            service: s401
            size: 9.766KiB
        - call:
            service: s402
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s380
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s387
            size: 9.766KiB
        - call:
            service: s388
            size: 9.766KiB
        - call:
            service: s389
            size: 9.766KiB
        - call:
            service: s390
            size: 9.766KiB
        - call:
            service: s391
            size: 9.766KiB
        - call:
            service: s392
            size: 9.766KiB
        - call:
            service: s393
            size: 9.766KiB
        - call:
            service: s394
            size: 9.766KiB
        - call:
            service: s395
            size: 9.766KiB
        - call:
            service: s396
            size: 9.766KiB
        - call:
            service: s397
            size: 9.766KiB
        - call:
            service: s398
            size: 9.766KiB
        - call:
            service: s399
            size: 9.766KiB
        - call:
            service: s400
            size: 9.766KiB
        - call:
            service: s401
            size: 9.766KiB
        - call:
            service: s402
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s381
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s387
            size: 9.766KiB
        - call:
            service: s388
            size: 9.766KiB
        - call:
            service: s389
            size: 9.766KiB
        - call:
            service: s390
            size: 9.766KiB
        - call:
            service: s391
            size: 9.766KiB
        - call:
            service: s392
            size: 9.766KiB
        - call:
            service: s393
            size: 9.766KiB
        - call:
            service: s394
            size: 9.766KiB
        - call:
            service: s395
            size: 9.766KiB
        - call:
            service: s396
            size: 9.766KiB
        - call:
            service: s397
            size: 9.766KiB
        - call:
            service: s398
            size: 9.766KiB
        - call:
            service: s399
            size: 9.766KiB
        - call:
            service: s400
            size: 9.766KiB
        - call:
            service: s401
            size: 9.766KiB
        - call:
            service: s402
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s382
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s387
            size: 9.766KiB
        - call:
            service: s388
            size: 9.766KiB
        - call:
            service: s389
            size: 9.766KiB
        - call:
            service: s390
            size: 9.766KiB
        - call:
            service: s391
            size: 9.766KiB
        - call:
            service: s392
            size: 9.766KiB
        - call:
            service: s393
            size: 9.766KiB
        - call:
            service: s394
            size: 9.766KiB
        - call:
            service: s395
            size: 9.766KiB
        - call:
            service: s396
            size: 9.766KiB
        - call:
            service: s397
            size: 9.766KiB
        - call:
            service: s398
            size: 9.766KiB
        - call:
            service: s399
            size: 9.766KiB
        - call:
            service: s400
            size: 9.766KiB
        - call:
            service: s401
            size: 9.766KiB
        - call:
            service: s402
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s383
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s387
            size: 9.766KiB
        - call:
            service: s388
            size: 9.766KiB
        - call:
            service: s389
            size: 9.766KiB
        - call:
            service: s390
            size: 9.766KiB
        - call:
            service: s391
            size: 9.766KiB
        - call:
            service: s392
            size: 9.766KiB
        - call:
            service: s393
            size: 9.766KiB
        - call:
            service: s394
            size: 9.766KiB
        - call:
            service: s395
            size: 9.766KiB
        - call:
            service: s396
            size: 9.766KiB
        - call:
            service: s397
            size: 9.766KiB
        - call:
            service: s398
            size: 9.766KiB
        - call:
            service: s399
            size: 9.766KiB
        - call:
            service: s400
            size: 9.766KiB
        - call:
            service: s401
            size: 9.766KiB
        - call:
            service: s402
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s384
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s387
            size: 9.766KiB
        - call:
            service: s388
            size: 9.766KiB
        - call:
            service: s389
            size: 9.766KiB
        - call:
            service: s390
            size: 9.766KiB
        - call:
            service: s391
            size: 9.766KiB
        - call:
            service: s392
            size: 9.766KiB
        - call:
            service: s393
            size: 9.766KiB
        - call:
            service: s394
            size: 9.766KiB
        - call:
            service: s395
            size: 9.766KiB
        - call:
            service: s396
            size: 9.766KiB
        - call:
            service: s397
            size: 9.766KiB
        - call:
            service: s398
            size: 9.766KiB
        - call:
            service: s399
            size: 9.766KiB
        - call:
            service: s400
            size: 9.766KiB
        - call:
            service: s401
            size: 9.766KiB
        - call:
            service: s402
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s385
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s387
            size: 9.766KiB
        - call:
            service: s388
            size: 9.766KiB
        - call:
            service: s389
            size: 9.766KiB
        - call:
            service: s390
            size: 9.766KiB
        - call:
            service: s391
            size: 9.766KiB
        - call:
            service: s392
            size: 9.766KiB
        - call:
            service: s393
            size: 9.766KiB
        - call:
            service: s394
            size: 9.766KiB
        - call:
            service: s395
            size: 9.766KiB
        - call:
            service: s396
            size: 9.766KiB
        - call:
            service: s397
            size: 9.766KiB
        - call:
            service: s398
            size: 9.766KiB
        - call:
            service: s399
            size: 9.766KiB
        - call:
            service: s400
            size: 9.766KiB
        - call:
            service: s401
            size: 9.766KiB
        - call:
            service: s402
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s386
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s387
            size: 9.766KiB
        - call:
            service: s388
            size: 9.766KiB
        - call:
            service: s389
            size: 9.766KiB
        - call:
            service: s390
            size: 9.766KiB
        - call:
            service: s391
            size: 9.766KiB
        - call:
            service: s392
            size: 9.766KiB
        - call:
            service: s393
            size: 9.766KiB
        - call:
            service: s394
            size: 9.766KiB
        - call:
            service: s395
            size: 9.766KiB
        - call:
            service: s396
            size: 9.766KiB
        - call:
            service: s397
            size: 9.766KiB
        - call:
            service: s398
            size: 9.766KiB
        - call:
            service: s399
            size: 9.766KiB
        - call:
            service: s400
            size: 9.766KiB
        - call:
            service: s401
            size: 9.766KiB
        - call:
            service: s402
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s387
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s388
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s389
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s390
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s391
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s392
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s393
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s394
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s395
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s396
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s397
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s398
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s399
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s400
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s401
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s402
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s403
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s404
            size: 9.766KiB
        - call:
            service: s405
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s404
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s406
            size: 9.766KiB
        - call:
            service: s407
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s405
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s408
            size: 9.766KiB
        - call:
            service: s409
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s406
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s410
            size: 9.766KiB
        - call:
            service: s411
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s407
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s412
            size: 9.766KiB
        - call:
            service: s413
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s408
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s414
            size: 9.766KiB
        - call:
            service: s415
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s409
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s416
            size: 9.766KiB
        - call:
            service: s417
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s410
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s418
            size: 9.766KiB
        - call:
            service: s419
            size: 9.766KiB
        - call:
            service: s420
            size: 9.766KiB
        - call:
            service: s421
            size: 9.766KiB
        - call:
            service: s422
            size: 9.766KiB
        - call:
            service: s423
            size: 9.766KiB
        - call:
            service: s424
            size: 9.766KiB
        - call:
            service: s425
            size: 9.766KiB
        - call:
            service: s426
            size: 9.766KiB
        - call:
            service: s427
            size: 9.766KiB
        - call:
            service: s428
            size: 9.766KiB
        - call:
            service: s429
            size: 9.766KiB
        - call:
            service: s430
            size: 9.766KiB
        - call:
            service: s431
            size: 9.766KiB
        - call:
            service: s432
            size: 9.766KiB
        - call:
            service: s433
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s411
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s418
            size: 9.766KiB
        - call:
            service: s419
            size: 9.766KiB
        - call:
            service: s420
            size: 9.766KiB
        - call:
            service: s421
            size: 9.766KiB
        - call:
            service: s422
            size: 9.766KiB
        - call:
            service: s423
            size: 9.766KiB
        - call:
            service: s424
            size: 9.766KiB
        - call:
            service: s425
            size: 9.766KiB
        - call:
            service: s426
            size: 9.766KiB
        - call:
            service: s427
            size: 9.766KiB
        - call:
            service: s428
            size: 9.766KiB
        - call:
            service: s429
            size: 9.766KiB
        - call:
            service: s430
            size: 9.766KiB
        - call:
            service: s431
            size: 9.766KiB
        - call:
            service: s432
            size: 9.766KiB
        - call:
            service: s433
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s412
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s418
            size: 9.766KiB
        - call:
            service: s419
            size: 9.766KiB
        - call:
            service: s420
            size: 9.766KiB
        - call:
            service: s421
            size: 9.766KiB
        - call:
            service: s422
            size: 9.766KiB
        - call:
            service: s423
            size: 9.766KiB
        - call:
            service: s424
            size: 9.766KiB
        - call:
            service: s425
            size: 9.766KiB
        - call:
            service: s426
            size: 9.766KiB
        - call:
            service: s427
            size: 9.766KiB
        - call:
            service: s428
            size: 9.766KiB
        - call:
            service: s429
            size: 9.766KiB
        - call:
            service: s430
            size: 9.766KiB
        - call:
            service: s431
            size: 9.766KiB
        - call:
            service: s432
            size: 9.766KiB
        - call:
            service: s433
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s413
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s418
            size: 9.766KiB
        - call:
            service: s419
            size: 9.766KiB
        - call:
            service: s420
            size: 9.766KiB
        - call:
            service: s421
            size: 9.766KiB
        - call:
            service: s422
            size: 9.766KiB
        - call:
            service: s423
            size: 9.766KiB
        - call:
            service: s424
            size: 9.766KiB
        - call:
            service: s425
            size: 9.766KiB
        - call:
            service: s426
            size: 9.766KiB
        - call:
            service: s427
            size: 9.766KiB
        - call:
            service: s428
            size: 9.766KiB
        - call:
            service: s429
            size: 9.766KiB
        - call:
            service: s430
            size: 9.766KiB
        - call:
            service: s431
            size: 9.766KiB
        - call:
            service: s432
            size: 9.766KiB
        - call:
            service: s433
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s414
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s418
            size: 9.766KiB
        - call:
            service: s419
            size: 9.766KiB
        - call:
            service: s420
            size: 9.766KiB
        - call:
            service: s421
            size: 9.766KiB
        - call:
            service: s422
            size: 9.766KiB
        - call:
            service: s423
            size: 9.766KiB
        - call:
            service: s424
            size: 9.766KiB
        - call:
            service: s425
            size: 9.766KiB
        - call:
            service: s426
            size: 9.766KiB
        - call:
            service: s427
            size: 9.766KiB
        - call:
            service: s428
            size: 9.766KiB
        - call:
            service: s429
            size: 9.766KiB
        - call:
            service: s430
            size: 9.766KiB
        - call:
            service: s431
            size: 9.766KiB
        - call:
            service: s432
            size: 9.766KiB
        - call:
            service: s433
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s415
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s418
            size: 9.766KiB
        - call:
            service: s419
            size: 9.766KiB
        - call:
            service: s420
            size: 9.766KiB
        - call:
            service: s421
            size: 9.766KiB
        - call:
            service: s422
            size: 9.766KiB
        - call:
            service: s423
            size: 9.766KiB
        - call:
            service: s424
            size: 9.766KiB
        - call:
            service: s425
            size: 9.766KiB
        - call:
            service: s426
            size: 9.766KiB
        - call:
            service: s427
            size: 9.766KiB
        - call:
            service: s428
            size: 9.766KiB
        - call:
            service: s429
            size: 9.766KiB
        - call:
            service: s430
            size: 9.766KiB
        - call:
            service: s431
            size: 9.766KiB
        - call:
            service: s432
            size: 9.766KiB
        - call:
            service: s433
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s416
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s418
            size: 9.766KiB
        - call:
            service: s419
            size: 9.766KiB
        - call:
            service: s420
            size: 9.766KiB
        - call:
            service: s421
            size: 9.766KiB
        - call:
            service: s422
            size: 9.766KiB
        - call:
            service: s423
            size: 9.766KiB
        - call:
            service: s424
            size: 9.766KiB
        - call:
            service: s425
            size: 9.766KiB
        - call:
            service: s426
            size: 9.766KiB
        - call:
            service: s427
            size: 9.766KiB
        - call:
            service: s428
            size: 9.766KiB
        - call:
            service: s429
            size: 9.766KiB
        - call:
            service: s430
            size: 9.766KiB
        - call:
            service: s431
            size: 9.766KiB
        - call:
            service: s432
            size: 9.766KiB
        - call:
            service: s433
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s417
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s418
            size: 9.766KiB
        - call:
            service: s419
            size: 9.766KiB
        - call:
            service: s420
            size: 9.766KiB
        - call:
            service: s421
            size: 9.766KiB
        - call:
            service: s422
            size: 9.766KiB
        - call:
            service: s423
            size: 9.766KiB
        - call:
            service: s424
            size: 9.766KiB
        - call:
            service: s425
            size: 9.766KiB
        - call:
            service: s426
            size: 9.766KiB
        - call:
            service: s427
            size: 9.766KiB
        - call:
            service: s428
            size: 9.766KiB
        - call:
            service: s429
            size: 9.766KiB
        - call:
            service: s430
            size: 9.766KiB
        - call:
            service: s431
            size: 9.766KiB
        - call:
            service: s432
            size: 9.766KiB
        - call:
            service: s433
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s418
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s419
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s420
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s421
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s422
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s423
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s424
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s425
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s426
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s427
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s428
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s429
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s430
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s431
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s432
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s433
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      isEntrypoint: true
      name: s434
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s435
            size: 9.766KiB
        - call:
            service: s436
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s435
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s437
            size: 9.766KiB
        - call:
            service: s438
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s436
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s439
            size: 9.766KiB
        - call:
            service: s440
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s437
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s441
            size: 9.766KiB
        - call:
            service: s442
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s438
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s443
            size: 9.766KiB
        - call:
            service: s444
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s439
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s445
            size: 9.766KiB
        - call:
            service: s446
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s440
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s447
            size: 9.766KiB
        - call:
            service: s448
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s441
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s449
            size: 9.766KiB
        - call:
            service: s450
            size: 9.766KiB
        - call:
            service: s451
            size: 9.766KiB
        - call:
            service: s452
            size: 9.766KiB
        - call:
            service: s453
            size: 9.766KiB
        - call:
            service: s454
            size: 9.766KiB
        - call:
            service: s455
            size: 9.766KiB
        - call:
            service: s456
            size: 9.766KiB
        - call:
            service: s457
            size: 9.766KiB
        - call:
            service: s458
            size: 9.766KiB
        - call:
            service: s459
            size: 9.766KiB
        - call:
            service: s460
            size: 9.766KiB
        - call:
            service: s461
            size: 9.766KiB
        - call:
            service: s462
            size: 9.766KiB
        - call:
            service: s463
            size: 9.766KiB
        - call:
            service: s464
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s442
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s449
            size: 9.766KiB
        - call:
            service: s450
            size: 9.766KiB
        - call:
            service: s451
            size: 9.766KiB
        - call:
            service: s452
            size: 9.766KiB
        - call:
            service: s453
            size: 9.766KiB
        - call:
            service: s454
            size: 9.766KiB
        - call:
            service: s455
            size: 9.766KiB
        - call:
            service: s456
            size: 9.766KiB
        - call:
            service: s457
            size: 9.766KiB
        - call:
            service: s458
            size: 9.766KiB
        - call:
            service: s459
            size: 9.766KiB
        - call:
            service: s460
            size: 9.766KiB
        - call:
            service: s461
            size: 9.766KiB
        - call:
            service: s462
            size: 9.766KiB
        - call:
            service: s463
            size: 9.766KiB
        - call:
            service: s464
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s443
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s449
            size: 9.766KiB
        - call:
            service: s450
            size: 9.766KiB
        - call:
            service: s451
            size: 9.766KiB
        - call:
            service: s452
            size: 9.766KiB
        - call:
            service: s453
            size: 9.766KiB
        - call:
            service: s454
            size: 9.766KiB
        - call:
            service: s455
            size: 9.766KiB
        - call:
            service: s456
            size: 9.766KiB
        - call:
            service: s457
            size: 9.766KiB
        - call:
            service: s458
            size: 9.766KiB
        - call:
            service: s459
            size: 9.766KiB
        - call:
            service: s460
            size: 9.766KiB
        - call:
            service: s461
            size: 9.766KiB
        - call:
            service: s462
            size: 9.766KiB
        - call:
            service: s463
            size: 9.766KiB
        - call:
            service: s464
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s444
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s449
            size: 9.766KiB
        - call:
            service: s450
            size: 9.766KiB
        - call:
            service: s451
            size: 9.766KiB
        - call:
            service: s452
            size: 9.766KiB
        - call:
            service: s453
            size: 9.766KiB
        - call:
            service: s454
            size: 9.766KiB
        - call:
            service: s455
            size: 9.766KiB
        - call:
            service: s456
            size: 9.766KiB
        - call:
            service: s457
            size: 9.766KiB
        - call:
            service: s458
            size: 9.766KiB
        - call:
            service: s459
            size: 9.766KiB
        - call:
            service: s460
            size: 9.766KiB
        - call:
            service: s461
            size: 9.766KiB
        - call:
            service: s462
            size: 9.766KiB
        - call:
            service: s463
            size: 9.766KiB
        - call:
            service: s464
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s445
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s449
            size: 9.766KiB
        - call:
            service: s450
            size: 9.766KiB
        - call:
            service: s451
            size: 9.766KiB
        - call:
            service: s452
            size: 9.766KiB
        - call:
            service: s453
            size: 9.766KiB
        - call:
            service: s454
            size: 9.766KiB
        - call:
            service: s455
            size: 9.766KiB
        - call:
            service: s456
            size: 9.766KiB
        - call:
            service: s457
            size: 9.766KiB
        - call:
            service: s458
            size: 9.766KiB
        - call:
            service: s459
            size: 9.766KiB
        - call:
            service: s460
            size: 9.766KiB
        - call:
            service: s461
            size: 9.766KiB
        - call:
            service: s462
            size: 9.766KiB
        - call:
            service: s463
            size: 9.766KiB
        - call:
            service: s464
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s446
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s449
            size: 9.766KiB
        - call:
            service: s450
            size: 9.766KiB
        - call:
            service: s451
            size: 9.766KiB
        - call:
            service: s452
            size: 9.766KiB
        - call:
            service: s453
            size: 9.766KiB
        - call:
            service: s454
            size: 9.766KiB
        - call:
            service: s455
            size: 9.766KiB
        - call:
            service: s456
            size: 9.766KiB
        - call:
            service: s457
            size: 9.766KiB
        - call:
            service: s458
            size: 9.766KiB
        - call:
            service: s459
            size: 9.766KiB
        - call:
            service: s460
            size: 9.766KiB
        - call:
            service: s461
            size: 9.766KiB
        - call:
            service: s462
            size: 9.766KiB
        - call:
            service: s463
            size: 9.766KiB
        - call:
            service: s464
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s447
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s449
            size: 9.766KiB
        - call:
            service: s450
            size: 9.766KiB
        - call:
            service: s451
            size: 9.766KiB
        - call:
            service: s452
            size: 9.766KiB
        - call:
            service: s453
            size: 9.766KiB
        - call:
            service: s454
            size: 9.766KiB
        - call:
            service: s455
            size: 9.766KiB
        - call:
            service: s456
            size: 9.766KiB
        - call:
            service: s457
            size: 9.766KiB
        - call:
            service: s458
            size: 9.766KiB
        - call:
            service: s459
            size: 9.766KiB
        - call:
            service: s460
            size: 9.766KiB
        - call:
            service: s461
            size: 9.766KiB
        - call:
            service: s462
            size: 9.766KiB
        - call:
            service: s463
            size: 9.766KiB
        - call:
            service: s464
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s448
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s449
            size: 9.766KiB
        - call:
            service: s450
            size: 9.766KiB
        - call:
            service: s451
            size: 9.766KiB
        - call:
            service: s452
            size: 9.766KiB
        - call:
            service: s453
            size: 9.766KiB
        - call:
            service: s454
            size: 9.766KiB
        - call:
            service: s455
            size: 9.766KiB
        - call:
            service: s456
            size: 9.766KiB
        - call:
            service: s457
            size: 9.766KiB
        - call:
            service: s458
            size: 9.766KiB
        - call:
            service: s459
            size: 9.766KiB
        - call:
            service: s460
            size: 9.766KiB
        - call:
            service: s461
            size: 9.766KiB
        - call:
            service: s462
            size: 9.766KiB
        - call:
            service: s463
            size: 9.766KiB
        - call:
            service: s464
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s449
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s450
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s451
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s452
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s453
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s454
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s455
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s456
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s457
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s458
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s459
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s460
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s461
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s462
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s463
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s464
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      isEntrypoint: true
      name: s465
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s466
            size: 9.766KiB
        - call:
            service: s467
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s466
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s468
            size: 9.766KiB
        - call:
            service: s469
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s467
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s470
            size: 9.766KiB
        - call:
            service: s471
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s468
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s472
            size: 9.766KiB
        - call:
            service: s473
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s469
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s474
            size: 9.766KiB
        - call:
            service: s475
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s470
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s476
            size: 9.766KiB
        - call:
            service: s477
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s471
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s478
            size: 9.766KiB
        - call:
            service: s479
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s472
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s480
            size: 9.766KiB
        - call:
            service: s481
            size: 9.766KiB
        - call:
            service: s482
            size: 9.766KiB
        - call:
            service: s483
            size: 9.766KiB
        - call:
            service: s484
            size: 9.766KiB
        - call:
            service: s485
            size: 9.766KiB
        - call:
            service: s486
            size: 9.766KiB
        - call:
            service: s487
            size: 9.766KiB
        - call:
            service: s488
            size: 9.766KiB
        - call:
            service: s489
            size: 9.766KiB
        - call:
            service: s490
            size: 9.766KiB
        - call:
            service: s491
            size: 9.766KiB
        - call:
            service: s492
            size: 9.766KiB
        - call:
            service: s493
            size: 9.766KiB
        - call:
            service: s494
            size: 9.766KiB
        - call:
            service: s495
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s473
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s480
            size: 9.766KiB
        - call:
            service: s481
            size: 9.766KiB
        - call:
            service: s482
            size: 9.766KiB
        - call:
            service: s483
            size: 9.766KiB
        - call:
            service: s484
            size: 9.766KiB
        - call:
            service: s485
            size: 9.766KiB
        - call:
            service: s486
            size: 9.766KiB
        - call:
            service: s487
            size: 9.766KiB
        - call:
            service: s488
            size: 9.766KiB
        - call:
            service: s489
            size: 9.766KiB
        - call:
            service: s490
            size: 9.766KiB
        - call:
            service: s491
            size: 9.766KiB
        - call:
            service: s492
            size: 9.766KiB
        - call:
            service: s493
            size: 9.766KiB
        - call:
            service: s494
            size: 9.766KiB
        - call:
            service: s495
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s474
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s480
            size: 9.766KiB
        - call:
            service: s481
            size: 9.766KiB
        - call:
            service: s482
            size: 9.766KiB
        - call:
            service: s483
            size: 9.766KiB
        - call:
            service: s484
            size: 9.766KiB
        - call:
            service: s485
            size: 9.766KiB
        - call:
            service: s486
            size: 9.766KiB
        - call:
            service: s487
            size: 9.766KiB
        - call:
            service: s488
            size: 9.766KiB
        - call:
            service: s489
            size: 9.766KiB
        - call:
            service: s490
            size: 9.766KiB
        - call:
            service: s491
            size: 9.766KiB
        - call:
            service: s492
            size: 9.766KiB
        - call:
            service: s493
            size: 9.766KiB
        - call:
            service: s494
            size: 9.766KiB
        - call:
            service: s495
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s475
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s480
            size: 9.766KiB
        - call:
            service: s481
            size: 9.766KiB
        - call:
            service: s482
            size: 9.766KiB
        - call:
            service: s483
            size: 9.766KiB
        - call:
            service: s484
            size: 9.766KiB
        - call:
            service: s485
            size: 9.766KiB
        - call:
            service: s486
            size: 9.766KiB
        - call:
            service: s487
            size: 9.766KiB
        - call:
            service: s488
            size: 9.766KiB
        - call:
            service: s489
            size: 9.766KiB
        - call:
            service: s490
            size: 9.766KiB
        - call:
            service: s491
            size: 9.766KiB
        - call:
            service: s492
            size: 9.766KiB
        - call:
            service: s493
            size: 9.766KiB
        - call:
            service: s494
            size: 9.766KiB
        - call:
            service: s495
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s476
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s480
            size: 9.766KiB
        - call:
            service: s481
            size: 9.766KiB
        - call:
            service: s482
            size: 9.766KiB
        - call:
            service: s483
            size: 9.766KiB
        - call:
            service: s484
            size: 9.766KiB
        - call:
            service: s485
            size: 9.766KiB
        - call:
            service: s486
            size: 9.766KiB
        - call:
            service: s487
            size: 9.766KiB
        - call:
            service: s488
            size: 9.766KiB
        - call:
            service: s489
            size: 9.766KiB
        - call:
            service: s490
            size: 9.766KiB
        - call:
            service: s491
            size: 9.766KiB
        - call:
            service: s492
            size: 9.766KiB
        - call:
            service: s493
            size: 9.766KiB
        - call:
            service: s494
            size: 9.766KiB
        - call:
            service: s495
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s477
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s480
            size: 9.766KiB
        - call:
            service: s481
            size: 9.766KiB
        - call:
            service: s482
            size: 9.766KiB
        - call:
            service: s483
            size: 9.766KiB
        - call:
            service: s484
            size: 9.766KiB
        - call:
            service: s485
            size: 9.766KiB
        - call:
            service: s486
            size: 9.766KiB
        - call:
            service: s487
            size: 9.766KiB
        - call:
            service: s488
            size: 9.766KiB
        - call:
            service: s489
            size: 9.766KiB
        - call:
            service: s490
            size: 9.766KiB
        - call:
            service: s491
            size: 9.766KiB
        - call:
            service: s492
            size: 9.766KiB
        - call:
            service: s493
            size: 9.766KiB
        - call:
            service: s494
            size: 9.766KiB
        - call:
            service: s495
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s478
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s480
            size: 9.766KiB
        - call:
            service: s481
            size: 9.766KiB
        - call:
            service: s482
            size: 9.766KiB
        - call:
            service: s483
            size: 9.766KiB
        - call:
            service: s484
            size: 9.766KiB
        - call:
            service: s485
            size: 9.766KiB
        - call:
            service: s486
            size: 9.766KiB
        - call:
            service: s487
            size: 9.766KiB
        - call:
            service: s488
            size: 9.766KiB
        - call:
            service: s489
            size: 9.766KiB
        - call:
            service: s490
            size: 9.766KiB
        - call:
            service: s491
            size: 9.766KiB
        - call:
            service: s492
            size: 9.766KiB
        - call:
            service: s493
            size: 9.766KiB
        - call:
            service: s494
            size: 9.766KiB
        - call:
            service: s495
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s479
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s480
            size: 9.766KiB
        - call:
            service: s481
            size: 9.766KiB
        - call:
            service: s482
            size: 9.766KiB
        - call:
            service: s483
            size: 9.766KiB
        - call:
            service: s484
            size: 9.766KiB
        - call:
            service: s485
            size: 9.766KiB
        - call:
            service: s486
            size: 9.766KiB
        - call:
            service: s487
            size: 9.766KiB
        - call:
            service: s488
            size: 9.766KiB
        - call:
            service: s489
            size: 9.766KiB
        - call:
            service: s490
            size: 9.766KiB
        - call:
            service: s491
            size: 9.766KiB
        - call:
            service: s492
            size: 9.766KiB
        - call:
            service: s493
            size: 9.766KiB
        - call:
            service: s494
            size: 9.766KiB
        - call:
            service: s495
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s480
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s481
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s482
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s483
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s484
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s485
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s486
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s487
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s488
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s489
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s490
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s491
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s492
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-3
      name: s493
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      name: s494
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s495
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-2
      isEntrypoint: true
      name: s496
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s497
            size: 9.766KiB
        - call:
            service: s498
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s497
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s499
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-4
      name: s498
      numReplicas: 6
      responseSize: 97.66KiB
      script:
      - - call:
            service: s499
            size: 9.766KiB
      type: http
    - cluster_context: gke_utopia-spike_asia-east1_istio-benchmarking-cluster-1
      name: s499
      numReplicas: 6
      responseSize: 97.66KiB
      type: http
kind: ConfigMap
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: service-graph-config
  namespace: service-graph
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s1
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s1
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s1
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s1
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s1
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s1
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s3
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s3
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s4
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s4
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s2
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s2
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s2
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s2
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s2
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s2
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s6
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s6
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s5
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s5
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s5
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s5
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s5
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s5
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s11
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s11
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s12
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s12
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s12
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s12
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s12
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s12
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s15
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s15
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s16
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s16
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s18
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s18
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s20
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s20
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s22
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s22
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s23
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s23
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s24
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s24
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s25
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s25
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s26
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s26
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s29
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s14
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s14
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s14
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s14
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s14
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s14
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s15
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s15
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s16
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s16
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s18
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s18
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s20
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s20
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s22
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s22
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s23
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s23
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s24
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s24
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s25
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s25
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s26
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s26
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s29
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s29
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s17
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s17
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s17
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s17
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s17
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s17
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s19
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s19
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s19
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s19
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s19
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s19
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s21
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s21
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s21
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s21
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s21
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s21
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s27
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s27
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s27
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s27
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s27
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s27
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s28
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s28
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s28
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s28
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s28
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s28
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s30
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s30
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s30
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s30
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s30
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s30
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s36
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s36
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s36
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s36
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s36
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s36
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s42
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s42
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s37
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s37
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s37
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s37
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s37
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s37
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s44
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s44
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s45
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s45
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s39
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s39
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s39
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s39
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s39
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s39
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s46
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s46
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s47
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s47
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s48
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s48
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s49
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s49
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s50
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s50
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s51
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s51
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s52
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s52
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s53
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s53
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s54
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s54
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s55
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s55
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s56
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s56
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s57
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s57
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s58
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s43
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s43
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s43
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s43
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s43
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s43
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s46
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s46
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s47
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s47
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s48
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s48
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s49
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s49
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s50
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s50
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s51
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s51
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s52
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s52
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s53
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s53
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s54
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s54
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s55
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s55
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s56
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s56
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s57
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s57
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s58
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s58
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s59
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s59
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s59
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s59
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s59
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s59
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s60
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s60
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s60
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s60
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s60
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s60
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s61
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s61
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s61
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s61
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s61
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s61
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s65
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s65
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s65
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s65
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s65
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s65
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s69
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s69
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s70
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s70
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s66
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s66
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s66
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s66
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s66
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s66
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s71
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s71
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s72
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s72
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s68
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s68
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s68
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s68
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s68
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s68
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s74
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s74
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s74
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s74
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s74
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s74
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s78
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s78
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s79
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s79
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s80
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s80
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s81
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s81
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s82
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s82
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s84
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s84
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s85
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s85
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s87
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s87
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s88
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s88
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s89
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s89
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s91
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s91
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s92
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s75
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s75
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s75
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s75
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s75
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s75
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s78
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s78
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s79
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s79
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s80
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s80
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s81
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s81
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s82
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s82
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s84
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s84
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s85
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s85
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s87
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s87
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s88
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s88
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s89
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s89
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s91
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s91
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s92
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s76
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s76
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s76
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s76
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s76
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s76
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s78
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s78
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s79
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s79
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s80
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s80
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s81
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s81
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s82
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s82
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s84
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s84
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s85
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s85
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s87
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s87
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s88
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s88
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s89
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s89
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s91
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s91
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s92
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s92
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s77
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s77
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s77
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s77
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s77
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s77
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s83
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s83
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s83
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s83
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s83
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s83
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s86
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s86
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s86
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s86
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s86
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s86
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s90
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s90
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s90
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s90
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s90
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s90
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s100
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s100
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s100
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s100
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s100
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s100
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s108
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s108
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s109
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s109
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s110
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s110
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s111
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s111
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s113
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s113
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s115
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s115
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s116
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s116
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s117
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s117
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s118
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s118
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s119
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s119
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s120
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s120
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s123
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s123
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s102
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s102
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s102
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s102
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s102
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s102
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s108
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s108
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s109
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s109
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s110
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s110
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s111
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s111
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s113
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s113
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s115
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s115
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s116
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s116
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s117
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s117
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s118
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s118
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s119
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s119
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s120
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s120
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s123
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s123
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s103
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s103
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s103
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s103
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s103
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s103
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s108
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s108
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s109
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s109
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s110
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s110
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s111
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s111
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s113
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s113
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s115
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s115
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s116
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s116
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s117
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s117
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s118
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s118
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s119
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s119
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s120
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s120
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s123
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s123
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s112
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s112
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s112
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s112
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s112
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s112
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s114
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s114
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s114
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s114
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s114
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s114
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s121
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s121
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s121
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s121
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s121
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s121
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s122
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s122
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s122
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s122
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s122
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s122
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s126
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s126
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s126
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s126
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s126
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s126
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s129
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s129
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s130
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s130
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s128
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s128
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s128
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s128
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s128
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s128
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s134
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s134
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s133
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s133
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s133
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s133
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s133
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s133
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s139
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s139
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s140
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s140
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s141
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s141
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s142
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s142
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s143
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s143
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s145
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s145
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s148
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s148
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s150
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s150
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s151
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s151
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s152
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s152
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s153
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s153
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s144
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s144
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s144
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s144
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s144
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s144
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s146
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s146
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s146
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s146
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s146
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s146
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s147
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s147
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s147
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s147
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s147
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s147
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s149
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s149
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s149
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s149
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s149
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s149
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s154
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s154
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s154
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s154
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s154
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s154
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s156
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s156
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s156
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s156
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s156
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s156
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s158
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s158
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s159
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s159
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s161
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s161
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s161
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s161
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s161
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s161
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s168
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s168
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s166
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s166
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s166
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s166
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s166
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s166
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s170
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s170
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s172
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s172
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s173
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s173
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s174
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s174
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s177
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s177
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s178
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s178
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s179
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s179
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s180
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s180
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s182
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s182
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s183
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s183
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s184
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s184
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s185
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s185
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s169
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s169
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s169
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s169
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s169
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s169
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s170
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s170
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s172
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s172
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s173
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s173
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s174
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s174
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s177
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s177
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s178
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s178
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s179
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s179
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s180
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s180
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s182
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s182
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s183
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s183
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s184
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s184
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s185
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s185
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s171
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s171
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s171
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s171
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s171
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s171
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s175
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s175
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s175
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s175
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s175
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s175
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s176
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s176
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s176
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s176
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s176
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s176
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s181
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s181
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s181
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s181
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s181
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s181
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s193
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s193
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s193
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s193
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s193
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s193
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s202
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s202
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s203
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s203
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s204
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s204
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s205
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s205
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s208
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s208
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s209
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s209
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s210
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s210
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s211
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s211
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s212
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s212
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s214
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s214
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s215
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s215
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s194
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s194
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s194
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s194
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s194
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s194
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s202
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s202
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s203
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s203
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s204
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s204
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s205
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s205
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s208
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s208
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s209
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s209
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s210
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s210
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s211
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s211
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s212
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s212
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s214
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s214
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s215
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s215
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s200
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s200
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s200
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s200
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s200
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s200
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s202
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s202
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s203
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s203
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s204
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s204
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s205
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s205
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s208
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s208
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s209
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s209
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s210
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s210
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s211
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s211
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s212
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s212
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s214
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s214
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s215
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s215
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s201
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s201
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s201
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s201
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s201
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s201
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s206
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s206
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s206
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s206
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s206
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s206
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s207
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s207
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s207
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s207
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s207
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s207
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s213
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s213
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s213
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s213
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s213
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s213
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s216
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s216
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s216
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s216
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s216
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s216
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s218
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s218
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s218
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s218
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s218
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s218
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s220
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s220
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s221
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s221
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s224
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s224
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s224
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s224
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s224
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s224
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s233
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s233
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s234
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s234
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s235
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s235
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s238
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s238
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s239
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s239
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s240
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s240
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s241
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s241
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s244
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s244
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s245
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s245
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s247
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s247
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s225
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s225
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s225
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s225
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s225
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s225
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s233
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s233
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s234
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s234
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s235
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s235
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s238
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s238
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s239
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s239
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s240
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s240
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s241
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s241
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s244
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s244
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s245
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s245
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s247
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s247
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s232
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s232
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s232
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s232
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s232
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s232
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s236
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s236
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s236
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s236
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s236
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s236
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s237
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s237
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s237
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s237
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s237
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s237
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s242
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s242
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s242
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s242
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s242
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s242
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s243
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s243
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s243
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s243
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s243
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s243
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s246
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s246
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s246
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s246
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s246
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s246
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s249
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s249
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s249
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s249
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s249
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s249
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s252
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s252
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s250
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s250
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s250
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s250
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s250
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s250
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s253
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s253
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s254
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s254
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s251
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s251
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s251
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s251
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s251
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s251
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s255
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s255
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s256
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s256
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s257
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s257
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s257
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s257
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s257
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s257
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s264
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s264
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s265
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s265
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s266
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s266
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s267
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s267
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s268
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s268
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s270
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s270
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s271
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s271
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s272
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s272
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s274
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s274
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s275
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s275
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s276
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s276
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s277
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s277
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s278
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s278
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s258
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s258
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s258
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s258
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s258
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s258
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s264
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s264
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s265
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s265
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s266
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s266
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s267
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s267
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s268
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s268
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s270
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s270
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s271
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s271
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s272
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s272
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s274
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s274
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s275
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s275
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s276
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s276
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s277
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s277
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s278
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s278
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s262
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s262
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s262
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s262
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s262
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s262
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s264
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s264
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s265
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s265
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s266
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s266
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s267
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s267
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s268
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s268
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s270
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s270
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s271
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s271
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s272
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s272
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s274
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s274
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s275
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s275
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s276
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s276
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s277
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s277
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s278
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s278
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s263
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s263
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s263
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s263
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s263
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s263
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s269
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s269
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s269
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s269
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s269
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s269
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s273
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s273
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s273
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s273
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s273
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s273
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s284
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s284
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s284
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s284
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s284
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s284
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s290
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s290
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s291
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s291
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s285
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s285
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s285
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s285
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s285
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s285
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s292
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s292
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s293
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s293
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s293
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s293
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s293
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s293
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s294
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s294
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s296
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s296
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s297
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s297
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s300
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s300
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s302
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s302
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s304
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s304
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s305
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s305
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s306
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s306
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s307
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s307
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s308
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s308
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s309
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s309
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s295
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s295
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s295
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s295
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s295
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s295
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s298
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s298
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s298
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s298
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s298
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s298
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s299
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s299
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s299
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s299
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s299
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s299
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s301
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s301
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s301
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s301
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s301
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s301
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s303
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s303
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s303
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s303
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s303
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s303
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s312
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s312
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s312
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s312
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s312
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s312
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s316
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s316
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s313
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s313
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s313
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s313
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s313
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s313
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s317
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s317
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s318
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s318
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s315
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s315
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s315
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s315
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s315
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s315
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s321
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s321
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s321
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s321
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s321
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s321
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s325
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s325
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s326
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s326
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s327
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s327
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s328
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s328
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s329
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s329
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s330
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s330
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s332
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s332
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s333
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s333
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s334
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s334
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s336
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s336
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s337
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s337
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s339
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s339
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s340
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s340
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s322
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s322
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s322
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s322
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s322
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s322
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s325
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s325
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s326
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s326
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s327
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s327
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s328
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s328
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s329
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s329
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s330
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s330
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s332
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s332
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s333
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s333
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s334
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s334
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s336
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s336
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s337
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s337
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s339
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s339
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s340
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s340
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s323
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s323
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s323
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s323
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s323
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s323
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s325
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s325
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s326
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s326
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s327
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s327
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s328
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s328
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s329
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s329
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s330
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s330
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s332
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s332
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s333
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s333
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s334
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s334
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s336
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s336
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s337
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s337
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s339
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s339
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s340
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s340
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s331
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s331
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s331
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s331
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s331
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s331
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s335
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s335
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s335
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s335
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s335
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s335
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s338
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s338
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s338
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s338
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s338
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s338
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s343
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s343
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s343
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s343
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s343
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s343
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s346
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s346
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s347
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s347
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s344
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s344
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s344
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s344
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s344
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s344
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s348
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s348
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s349
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s349
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s357
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s357
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s357
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s357
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s357
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s357
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s358
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s358
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s358
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s358
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s358
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s358
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s363
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s363
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s363
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s363
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s363
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s363
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s365
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s365
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s365
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s365
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s365
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s365
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s371
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s371
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s371
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s371
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s371
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s371
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s372
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s372
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s372
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s372
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s372
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s372
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s373
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s373
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s374
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s374
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: client
  name: client-s372
spec:
  selector:
    matchLabels:
      app: client-s372
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        app: client-s372
    spec:
      containers:
      - args:
        - load
        - -c
        - "8"
        - -qps
        - "200"
        - -t
        - "0"
        - -r
        - "0.0001"
        - -H
        - 'Host: s372.service-graph.svc.cluster.local'
        - http://35.186.204.88
        image: tahler/fortio:prometheus
        name: fortio-client
        ports:
        - containerPort: 8080
        - containerPort: 42422
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: client
  name: client-s372
spec:
  ports:
  - port: 8080
    targetPort: 0
  selector:
    app: client-s372
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s376
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s376
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s376
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s376
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s376
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s376
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s382
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s382
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s377
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s377
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s377
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s377
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s377
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s377
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s383
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s383
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s380
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s380
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s380
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s380
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s380
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s380
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s387
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s387
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s388
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s388
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s389
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s389
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s392
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s392
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s393
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s393
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s395
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s395
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s396
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s396
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s397
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s397
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s398
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s398
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s399
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s399
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s400
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s400
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s401
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s401
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s381
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s381
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s381
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s381
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s381
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s381
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s387
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s387
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s388
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s388
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s389
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s389
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s392
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s392
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s393
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s393
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s395
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s395
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s396
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s396
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s397
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s397
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s398
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s398
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s399
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s399
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s400
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s400
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s401
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s401
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s384
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s384
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s384
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s384
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s384
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s384
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s387
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s387
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s388
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s388
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s389
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s389
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s392
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s392
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s393
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s393
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s395
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s395
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s396
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s396
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s397
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s397
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s398
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s398
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s399
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s399
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s400
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s400
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s401
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s401
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s390
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s390
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s390
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s390
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s390
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s390
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s391
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s391
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s391
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s391
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s391
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s391
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s394
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s394
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:48Z"
      labels:
        name: s394
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s394
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:48Z"
  labels:
    app: service-graph
  name: s394
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s394
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s402
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s402
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s402
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s402
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s402
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s402
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s412
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s412
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s412
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s412
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s412
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s412
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s418
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s418
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s419
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s419
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s420
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s420
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s421
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s421
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s422
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s422
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s423
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s423
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s424
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s424
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s425
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s425
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s427
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s427
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s428
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s428
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s429
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s429
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s430
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s430
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s431
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s431
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s432
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s432
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s433
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s433
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s417
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s417
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s417
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s417
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s417
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s417
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s418
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s418
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s419
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s419
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s420
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s420
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s421
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s421
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s422
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s422
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s423
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s423
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s424
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s424
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s425
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s425
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s427
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s427
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s428
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s428
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s429
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s429
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s430
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s430
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s431
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s431
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s432
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s432
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s433
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s433
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s426
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s426
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s426
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s426
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s426
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s426
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s436
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s436
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s436
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s436
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s436
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s436
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s439
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s439
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s440
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s440
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s441
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s441
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s441
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s441
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s441
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s441
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s449
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s449
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s451
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s451
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s452
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s452
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s455
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s455
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s456
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s456
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s457
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s457
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s459
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s459
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s461
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s461
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s464
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s464
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s445
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s445
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s445
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s445
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s445
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s445
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s449
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s449
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s451
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s451
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s452
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s452
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s455
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s455
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s456
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s456
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s457
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s457
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s459
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s459
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s461
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s461
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s464
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s464
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s447
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s447
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s447
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s447
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s447
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s447
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s449
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s449
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s451
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s451
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s452
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s452
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s455
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s455
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s456
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s456
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s457
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s457
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s459
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s459
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s461
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s461
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s464
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s464
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s450
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s450
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s450
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s450
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s450
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s450
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s453
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s453
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s453
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s453
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s453
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s453
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s454
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s454
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s454
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s454
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s454
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s454
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s458
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s458
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s458
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s458
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s458
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s458
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s460
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s460
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s460
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s460
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s460
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s460
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s462
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s462
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s462
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s462
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s462
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s462
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s463
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s463
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s463
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s463
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s463
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s463
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s466
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s466
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s466
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s466
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s466
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s466
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s469
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s469
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s468
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s468
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s468
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s468
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s468
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s468
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s472
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s472
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s473
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s473
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s473
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s473
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s473
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s473
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s481
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s481
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s482
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s482
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s485
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s485
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s486
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s486
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s487
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s487
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s488
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s488
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s489
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s489
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s490
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s490
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s491
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s491
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s492
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s492
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s494
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s494
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s495
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s495
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s478
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s478
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s478
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s478
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s478
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s478
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s481
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s481
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s482
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s482
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s485
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s485
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s486
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s486
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s487
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s487
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s488
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s488
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s489
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s489
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s490
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s490
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s491
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s491
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s492
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s492
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s494
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s494
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s495
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s495
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s480
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s480
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s480
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s480
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s480
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s480
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s483
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s483
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s483
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s483
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s483
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s483
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s484
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s484
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s484
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s484
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s484
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s484
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s493
  namespace: service-graph
spec:
  replicas: 6
  selector:
    matchLabels:
      name: s493
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: "2020-05-15T07:40:49Z"
      labels:
        name: s493
        role: service
    spec:
      containers:
      - args:
        - --max-idle-connections-per-host=640
        env:
        - name: SERVICE_NAME
          value: s493
        image: tahler/isotope-service:1
        name: mock-service
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      volumes:
      - configMap:
          items:
          - key: service-graph
            path: service-graph.yaml
          name: service-graph-config
        name: config-volume
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-05-15T07:40:49Z"
  labels:
    app: service-graph
  name: s493
  namespace: service-graph
spec:
  ports:
  - name: http-web
    port: 8080
    targetPort: 8080
  selector:
    name: s493
status:
  loadBalancer: {}
